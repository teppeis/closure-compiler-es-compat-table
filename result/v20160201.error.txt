// spread (...) operator: spreading non-iterables is a runtime error
module.exports = function() {

        try {
          Math.max(...2);
        } catch(e) {
          return Math.max(...[1, 2, 3]) === 3;
        }
      
};
./build/27/in.js:5: WARNING - Suspicious code. The result of the extern function call 'Math.max' is not being used.
          Math.max(...2);
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// object literal extensions: string-keyed shorthand methods
module.exports = function() {

        return ({ "foo bar"() { return 4; } })["foo bar"]() === 4;
      
};
./build/31/in.js:4: ERROR - Parse error. '[' expected
        return ({ "foo bar"() { return 4; } })["foo bar"]() === 4;
                  ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// object literal extensions: computed accessors
module.exports = function() {

        var x = 'y',
            valueSet,
            obj = {
              get [x] () { return 1 },
              set [x] (value) { valueSet = value }
            };
        obj.y = 'foo';
        return obj.y === 1 && valueSet === 'foo';
      
};
./build/33/in.js:7: ERROR - ES6 transpilation of 'computed getter/setter in an object literal' is not yet implemented.
              get [x] () { return 1 },
              ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// for..of loops: with arrays
module.exports = function() {

        var arr = [5];
        for (var item of arr)
          return item === 5;
      
};
./build/34/in.js:5: WARNING - unreachable code
        for (var item of arr)
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// for..of loops: iterator closing, break
module.exports = function() {

        var closed = false;
        var iter = __createIterableObject([1, 2, 3], {
          'return': function(){ closed = true; return {}; }
        });
        for (var it of iter) break;
        return closed;
      
};
./build/41/in.js:8: WARNING - unreachable code
        for (var it of iter) break;
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// for..of loops: iterator closing, throw
module.exports = function() {

        var closed = false;
        var iter = __createIterableObject([1, 2, 3], {
          'return': function(){ closed = true; return {}; }
        });
        try {
          for (var it of iter) throw 0;
        } catch(e){}
        return closed;
      
};
./build/42/in.js:9: WARNING - unreachable code
          for (var it of iter) throw 0;
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// RegExp "y" and "u" flags: "y" flag
module.exports = function() {

        var re = new RegExp('\\w');
        var re2 = new RegExp('\\w', 'y');
        re.exec('xy');
        re2.exec('xy');
        return (re.exec('xy')[0] === 'x' && re2.exec('xy')[0] === 'y');
      
};
./build/51/in.js:5: WARNING - Invalid flags to RegExp constructor: STRING y 5 [source_file: ./build/51/in.js]
        var re2 = new RegExp('\\w', 'y');
                                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// destructuring: iterable destructuring expression
module.exports = function() {

        var a, b, iterable = [1,2];
        return ([a, b] = iterable) === iterable;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ARRAY_PATTERN): ./build/61/in.js:5:16
        return ([a, b] = iterable) === iterable;
  Parent(ASSIGN): ./build/61/in.js:5:16
        return ([a, b] = iterable) === iterable;

	at com.google.common.base.Preconditions.checkState(Preconditions.java:159)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitArrayPattern(Es6RewriteDestructuring.java:275)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:69)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:621)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:664)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:609)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:655)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:44)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:771)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:687)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:645)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:642)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException
	... 30 more
--------------------------------------------------------------------------------
// destructuring: chained iterable destructuring
module.exports = function() {

        var a,b,c,d;
        [a,b] = [c,d] = [1,2];
        return a === 1 && b === 2 && c === 1 && d === 2;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ARRAY_PATTERN): ./build/62/in.js:5:16
        [a,b] = [c,d] = [1,2];
  Parent(ASSIGN): ./build/62/in.js:5:16
        [a,b] = [c,d] = [1,2];

	at com.google.common.base.Preconditions.checkState(Preconditions.java:159)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitArrayPattern(Es6RewriteDestructuring.java:275)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:69)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:621)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:664)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:609)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:655)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:44)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:771)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:687)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:645)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:642)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException
	... 30 more
--------------------------------------------------------------------------------
// destructuring: trailing commas in iterable patterns
module.exports = function() {

        var [a,] = [1];
        return a === 1;
      
};
./build/63/in.js:4: ERROR - Parse error. Array pattern may not end with a comma
        var [a,] = [1];
               ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// destructuring: object destructuring expression
module.exports = function() {

        var a, b, obj = { a:1, b:2 };
        return ({a,b} = obj) === obj;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

Unexpected OBJECT_PATTERN parent: ASSIGN 5 [source_file: ./build/67/in.js]
  Node(OBJECT_PATTERN): ./build/67/in.js:5:16
        return ({a,b} = obj) === obj;
  Parent(ASSIGN): ./build/67/in.js:5:16
        return ({a,b} = obj) === obj;

	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitObjectPattern(Es6RewriteDestructuring.java:174)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:72)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:621)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:664)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:609)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:655)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:44)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:771)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:687)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:645)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:642)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: Unexpected OBJECT_PATTERN parent: ASSIGN 5 [source_file: ./build/67/in.js]
	... 29 more
--------------------------------------------------------------------------------
// destructuring: chained object destructuring
module.exports = function() {

        var a,b,c,d;
        ({a,b} = {c,d} = {a:1,b:2,c:3,d:4});
        return a === 1 && b === 2 && c === 3 && d === 4;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

Unexpected OBJECT_PATTERN parent: ASSIGN 5 [source_file: ./build/69/in.js]
  Node(OBJECT_PATTERN): ./build/69/in.js:5:17
        ({a,b} = {c,d} = {a:1,b:2,c:3,d:4});
  Parent(ASSIGN): ./build/69/in.js:5:17
        ({a,b} = {c,d} = {a:1,b:2,c:3,d:4});

	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitObjectPattern(Es6RewriteDestructuring.java:174)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:72)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:621)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:664)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:609)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:655)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:44)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:771)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:687)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:645)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:642)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: Unexpected OBJECT_PATTERN parent: ASSIGN 5 [source_file: ./build/69/in.js]
	... 29 more
--------------------------------------------------------------------------------
// destructuring: in for-of loop heads
module.exports = function() {

        for(var [i, j, k] of [[1,2,3]]) {
          return i === 1 && j === 2 && k === 3;
        }
      
};
./build/79/in.js:4: WARNING - unreachable code
        for(var [i, j, k] of [[1,2,3]]) {
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// destructuring: nested rest
module.exports = function() {

        var a = [1, 2, 3], first, last;
        [first, ...[a[2], last]] = a;
        return first === 1 && last === 3 && (a + "") === "1,2,2";
      
};
./build/81/in.js:5: ERROR - Parse error. lvalues in rest elements must be identifiers
        [first, ...[a[2], last]] = a;
                               ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// new.target: in constructors
module.exports = function() {

        var passed = false;
        new function f() {
          passed = (new.target === f);
        }();
        (function() {
          passed &= (new.target === undefined);
        }());
        return passed;
      
};
./build/91/in.js:6: ERROR - Parse error. primary expression expected
          passed = (new.target === f);
                        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// new.target: assignment is an early error
module.exports = function() {

        var passed = false;
        new function f() {
          passed = (new.target === f);
        }();

        try {
          Function("new.target = function(){};");
        } catch(e) {
          return passed;
        }
      
};
./build/92/in.js:6: ERROR - Parse error. primary expression expected
          passed = (new.target === f);
                        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// const: temporal dead zone
module.exports = function() {

        var passed = (function(){ try { qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        const qux = 456;
        fn();
        return passed;
      
};
./build/96/in.js:4: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        var passed = (function(){ try { qux; } catch(e) { return true; }}());
                                        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// const: temporal dead zone (strict mode)
module.exports = function() {

        'use strict';
        var passed = (function(){ try { qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        const qux = 456;
        fn();
        return passed;
      
};
./build/100/in.js:5: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        var passed = (function(){ try { qux; } catch(e) { return true; }}());
                                        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// let: for-loop statement scope
module.exports = function() {

        let baz = 1;
        for(let baz = 0; false; false) {}
        return baz === 1;
      
};
./build/103/in.js:5: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        for(let baz = 0; false; false) {}
                                ^

./build/103/in.js:5: WARNING - unreachable code
        for(let baz = 0; false; false) {}
                                ^

./build/103/in.js:5: WARNING - unreachable code
        for(let baz = 0; false; false) {}
                                       ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// let: temporal dead zone
module.exports = function() {

        var passed = (function(){ try {  qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        let qux = 456;
        fn();
        return passed;
      
};
./build/104/in.js:4: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        var passed = (function(){ try {  qux; } catch(e) { return true; }}());
                                         ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// let: for-loop statement scope (strict mode)
module.exports = function() {

        'use strict';
        let baz = 1;
        for(let baz = 0; false; false) {}
        return baz === 1;
      
};
./build/108/in.js:6: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        for(let baz = 0; false; false) {}
                                ^

./build/108/in.js:6: WARNING - unreachable code
        for(let baz = 0; false; false) {}
                                ^

./build/108/in.js:6: WARNING - unreachable code
        for(let baz = 0; false; false) {}
                                       ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// let: temporal dead zone (strict mode)
module.exports = function() {

        'use strict';
        var passed = (function(){ try {  qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        let qux = 456;
        fn();
        return passed;
      
};
./build/109/in.js:5: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        var passed = (function(){ try {  qux; } catch(e) { return true; }}());
                                         ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// arrow functions: lexical "new.target" binding
module.exports = function() {

        function C() {
          return x => new.target;
        }
        return new C()() === C && C()() === undefined;
      
};
./build/123/in.js:5: ERROR - Parse error. primary expression expected
          return x => new.target;
                          ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: class expression
module.exports = function() {

        return typeof class C {} === "function";
      
};
./build/126/in.js:4: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
        return typeof class C {} === "function";
               ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: anonymous class
module.exports = function() {

        return typeof class {} === "function";
      
};
./build/127/in.js:4: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
        return typeof class {} === "function";
               ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: string-keyed methods
module.exports = function() {

        class C {
          "foo bar"() { return 2; }
        }
        return typeof C.prototype["foo bar"] === "function"
          && new C()["foo bar"]() === 2;
      
};
./build/130/in.js:5: ERROR - Parse error. '}' expected
          "foo bar"() { return 2; }
          ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: accessor properties
module.exports = function() {

        var baz = false;
        class C {
          get foo() { return "foo"; }
          set bar(x) { baz = x; }
        }
        new C().bar = true;
        return new C().foo === "foo" && baz;
      
};
./build/134/in.js:6: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
          get foo() { return "foo"; }
              ^

./build/134/in.js:7: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
          set bar(x) { baz = x; }
              ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: static accessor properties
module.exports = function() {

        var baz = false;
        class C {
          static get foo() { return "foo"; }
          static set bar(x) { baz = x; }
        }
        C.bar = true;
        return C.foo === "foo" && baz;
      
};
./build/136/in.js:6: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
          static get foo() { return "foo"; }
                     ^

./build/136/in.js:7: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
          static set bar(x) { baz = x; }
                     ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: computed static accessor properties
module.exports = function() {

        var garply = "foo", grault = "bar", baz = false;
        class C {
          static get [garply]() { return "foo"; }
          static set [grault](x) { baz = x; }
        }
        C.bar = true;
        return C.foo === "foo" && baz;
      
};
./build/137/in.js:6: ERROR - ES6 transpilation of 'Static computed property' is not yet implemented.
          static get [garply]() { return "foo"; }
          ^

./build/137/in.js:7: ERROR - ES6 transpilation of 'Static computed property' is not yet implemented.
          static set [grault](x) { baz = x; }
          ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: class name is lexically scoped
module.exports = function() {

        class C {
          method() { return typeof C === "function"; }
        }
        var M = C.prototype.method;
        C = undefined;
        return C === undefined && M();
      
};
./build/138/in.js:8: ERROR - Class names defined inside a function cannot be reassigned.
        C = undefined;
        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: implicit strict mode
module.exports = function() {

        class C {
          static method() { return this === undefined; }
        }
        return (0,C.method)();
      
};
./build/141/in.js:7: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        return (0,C.method)();
                ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// class: extends expressions
module.exports = function() {

        var B;
        class C extends (B = class {}) {}
        return new C() instanceof B
          && B.isPrototypeOf(C);
      
};
./build/144/in.js:5: ERROR - The class in an extends clause must be a qualified name.
        class C extends (B = class {}) {}
                         ^

./build/144/in.js:5: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
        class C extends (B = class {}) {}
                         ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: extends null
module.exports = function() {

        class C extends null {
          constructor() { return Object.create(null); }
        }
        return Function.prototype.isPrototypeOf(C)
          && Object.getPrototypeOf(C.prototype) === null;
      
};
./build/145/in.js:4: ERROR - The class in an extends clause must be a qualified name.
        class C extends null {
                        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: new.target
module.exports = function() {

        var passed = false;
        new function f() {
          passed = new.target === f;
        }();

        class A {
          constructor() {
            passed &= new.target === B;
          }
        }
        class B extends A {}
        new B();
        return passed;
      
};
./build/146/in.js:6: ERROR - Parse error. primary expression expected
          passed = new.target === f;
                       ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// super: in methods, property access
module.exports = function() {

        class B {}
        B.prototype.qux = "foo";
        B.prototype.corge = "baz";
        class C extends B {
          quux(a) { return super.qux + a + super["corge"]; }
        }
        C.prototype.qux = "garply";
        return new C().quux("bar") === "foobarbaz";
      
};
./build/149/in.js:8: ERROR - ES6 transpilation of 'Only calls to super or to a method of super are supported.' is not yet implemented.
          quux(a) { return super.qux + a + super["corge"]; }
                           ^

./build/149/in.js:8: ERROR - ES6 transpilation of 'Only calls to super or to a method of super are supported.' is not yet implemented.
          quux(a) { return super.qux + a + super["corge"]; }
                                           ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// super: constructor calls use correct "new.target" binding
module.exports = function() {

        var passed;
        class B {
          constructor() { passed = (new.target === C); }
        }
        class C extends B {
          constructor() { super(); }
        }
        new C();
        return passed;
      
};
./build/152/in.js:6: ERROR - Parse error. primary expression expected
          constructor() { passed = (new.target === C); }
                                        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// generators: string-keyed shorthand generator methods
module.exports = function() {

        var o = {
          * "foo bar"() {
            yield 5; yield 6;
          },
        };
        var iterator = o["foo bar"]();
        var item = iterator.next();
        var passed = item.value === 5 && item.done === false;
        item = iterator.next();
        passed    &= item.value === 6 && item.done === false;
        item = iterator.next();
        passed    &= item.value === undefined && item.done === true;
        return passed;
      
};
./build/174/in.js:5: ERROR - Parse error. '[' expected
          * "foo bar"() {
            ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// Proxy: "isExtensible" handler
module.exports = function() {

        var proxied = {};
        var passed = false;
        Object.isExtensible(
          new Proxy(proxied, {
            isExtensible: function (t) {
              passed = t === proxied; return true;
            }
          })
        );
        return passed;
      
};
./build/290/in.js:6: WARNING - Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
        Object.isExtensible(
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "ownKeys" handler
module.exports = function() {

        var proxied = {};
        var passed = false;
        Object.keys(
          new Proxy(proxied, {
            ownKeys: function (t) {
              passed = t === proxied; return [];
            }
          })
        );
        return passed;
      
};
./build/293/in.js:6: WARNING - Suspicious code. The result of the extern function call 'Object.keys' is not being used.
        Object.keys(
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: Proxy.revocable
module.exports = function() {

        var obj = Proxy.revocable({}, { get: function() { return 5; } });
        var passed = (obj.proxy.foo === 5);
        obj.revoke();
        try {
          obj.proxy.foo;
        } catch(e) {
          passed &= e instanceof TypeError;
        }
        return passed;
      
};
./build/296/in.js:8: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
          obj.proxy.foo;
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct, new.target
module.exports = function() {

        return Reflect.construct(function(a, b, c) {
          if (new.target === Object) {
            this.qux = a + b + c;
          }
        }, ["foo", "bar", "baz"], Object).qux === "foobarbaz";
      
};
./build/314/in.js:5: ERROR - Parse error. primary expression expected
          if (new.target === Object) {
                  ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// Symbol: cannot coerce to string or number
module.exports = function() {

        var symbol = Symbol();

        try {
          symbol + "";
          return false;
        }
        catch(e) {}

        try {
          symbol + 0;
          return false;
        } catch(e) {}

        return true;
      
};
./build/326/in.js:7: WARNING - Suspicious code. The result of the 'add' operator is not being used.
          symbol + "";
          ^

./build/326/in.js:13: WARNING - Suspicious code. The result of the 'add' operator is not being used.
          symbol + 0;
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// well-known symbols: Symbol.hasInstance
module.exports = function() {

        var passed = false;
        var obj = { foo: true };
        var C = function(){};
        Object.defineProperty(C, Symbol.hasInstance, {
          value: function(inst) { passed = inst.foo; return false; }
        });
        obj instanceof C;
        return passed;
      
};
./build/331/in.js:10: WARNING - Suspicious code. The result of the 'instanceof' operator is not being used.
        obj instanceof C;
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// well-known symbols: Symbol.toPrimitive
module.exports = function() {

        var a = {}, b = {}, c = {};
        var passed = 0;
        a[Symbol.toPrimitive] = function(hint) { passed += hint === "number";  return 0; };
        b[Symbol.toPrimitive] = function(hint) { passed += hint === "string";  return 0; };
        c[Symbol.toPrimitive] = function(hint) { passed += hint === "default"; return 0; };

        a >= 0;
        b in {};
        c == 0;
        return passed === 3;
      
};
./build/346/in.js:10: WARNING - Suspicious code. The result of the 'ge' operator is not being used.
        a >= 0;
        ^

./build/346/in.js:11: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        b in {};
        ^

./build/346/in.js:12: WARNING - Suspicious code. The result of the 'eq' operator is not being used.
        c == 0;
        ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// function "name" property: accessor properties
module.exports = function() {

        var o = { get foo(){}, set foo(x){} };
        var descriptor = Object.getOwnPropertyDescriptor(o, "foo");
        return descriptor.get.name === "get foo" &&
               descriptor.set.name === "set foo";
      
};
./build/360/in.js:4: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
        var o = { get foo(){}, set foo(x){} };
                      ^

./build/360/in.js:4: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
        var o = { get foo(){}, set foo(x){} };
                                   ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// function "name" property: class expressions
module.exports = function() {

        return class foo {}.name === "foo" &&
          typeof class bar { static name() {} }.name === "function";
      
};
./build/365/in.js:4: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
        return class foo {}.name === "foo" &&
               ^

./build/365/in.js:5: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
          typeof class bar { static name() {} }.name === "function";
                 ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// function "name" property: object methods (class)
module.exports = function() {

        var o = { foo: class {}, bar: class baz {}};
        o.qux = class {};
        return o.foo.name === "foo" &&
               o.bar.name === "baz" &&
               o.qux.name === "";
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ASSIGN): ./build/367/in.js:5:8
        o.qux = class {};
  Parent(EXPR_RESULT): ./build/367/in.js:5:8
        o.qux = class {};

  Node(CLASS): ./build/367/in.js:4:23
        var o = { foo: class {}, bar: class baz {}};
  Parent(STRING_KEY foo): ./build/367/in.js:4:18
        var o = { foo: class {}, bar: class baz {}};

	at com.google.javascript.jscomp.Es6ToEs3Converter$CheckClassAssignments.visit(Es6ToEs3Converter.java:914)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:621)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:664)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:609)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:655)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6ToEs3Converter.checkClassReassignment(Es6ToEs3Converter.java:293)
	at com.google.javascript.jscomp.Es6ToEs3Converter.visitClass(Es6ToEs3Converter.java:527)
	at com.google.javascript.jscomp.Es6ToEs3Converter.visit(Es6ToEs3Converter.java:157)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:621)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:664)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:609)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:655)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:615)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6ToEs3Converter.process(Es6ToEs3Converter.java:99)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:771)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:687)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:645)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:642)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ASSIGN): ./build/367/in.js:5:8
        o.qux = class {};
  Parent(EXPR_RESULT): ./build/367/in.js:5:8
        o.qux = class {};

	... 40 more
Caused by: java.lang.NullPointerException
	... 40 more
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: ToPrimitive
module.exports = function() {

        // ToPrimitive -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({toString:Function()}, { get: function(o, k) { get.push(k); return o[k]; }});
        p + 3;
        return get[0] === Symbol.toPrimitive && get.slice(1) + '' === "valueOf,toString";
      
};
./build/467/in.js:7: WARNING - Suspicious code. The result of the 'add' operator is not being used.
        p + 3;
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: instanceof operator
module.exports = function() {

        // InstanceofOperator -> GetMethod -> GetV -> [[Get]]
        // InstanceofOperator -> OrdinaryHasInstance -> Get -> [[Get]]
        var get = [];
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
        ({}) instanceof p;
        return get[0] === Symbol.hasInstance && get.slice(1) + '' === "prototype";
      
};
./build/469/in.js:8: WARNING - Suspicious code. The result of the 'instanceof' operator is not being used.
        ({}) instanceof p;
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: HasBinding
module.exports = function() {

        // HasBinding -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({foo:1}, { get: function(o, k) { get.push(k); return o[k]; }});
        p[Symbol.unscopables] = p;
        with(p) {
          typeof foo;
        }
        return get[0] === Symbol.unscopables && get.slice(1) + '' === "foo";
      
};
./build/470/in.js:9: WARNING - Suspicious code. The result of the 'typeof' operator is not being used.
          typeof foo;
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp constructor
module.exports = function() {

        // RegExp -> Get -> [[Get]]
        var get = [];
        var re = { constructor: null };
        re[Symbol.match] = true;
        var p = new Proxy(re, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp(p);
        return get[0] === Symbol.match && get.slice(1) + '' === "constructor,source,flags";
      
};
./build/480/in.js:9: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        RegExp(p);
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'ownKeys' calls: TestIntegrityLevel
module.exports = function() {

        // TestIntegrityLevel -> [[OwnPropertyKeys]]
        var ownKeysCalled = 0;
        var p = new Proxy(Object.preventExtensions({}), { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
        Object.isFrozen(p);
        return ownKeysCalled === 1;
      
};
./build/526/in.js:7: WARNING - Suspicious code. The result of the extern function call 'Object.isFrozen' is not being used.
        Object.isFrozen(p);
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// miscellaneous: accessors aren't constructors
module.exports = function() {

        try {
          new (Object.getOwnPropertyDescriptor({get a(){}}, 'a')).get;
        } catch(e) {
          return true;
        }
      
};
./build/548/in.js:5: ERROR - This code cannot be converted from ES6. ES5 getters/setters (consider using --language_out=ES5)
          new (Object.getOwnPropertyDescriptor({get a(){}}, 'a')).get;
                                                    ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// miscellaneous: built-in prototypes are not instances
module.exports = function() {

        try {
          RegExp.prototype.source; return false;
        } catch(e) {}
        try {
          Date.prototype.valueOf(); return false;
        } catch(e) {}
        return true;
      
};
./build/551/in.js:5: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
          RegExp.prototype.source; return false;
          ^

./build/551/in.js:8: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
          Date.prototype.valueOf(); return false;
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// non-strict function semantics: function statements in if-statement clauses
module.exports = function() {

        // Note: only available outside of strict mode.
        if (!this) return false;
        
        if(true) function foo() { return 2; }
        if(false) {} else function bar() { return 3; }
        if(true) function baz() { return 4; } else {}
        if(false) function qux() { return 5; } else function qux() { return 6; }
        return foo() === 2 && bar() === 3 && baz() === 4 && qux() === 6;
      
};
./build/555/in.js:7: ERROR - Block-scoped declaration not directly within block: foo
        if(true) function foo() { return 2; }
                          ^

./build/555/in.js:8: ERROR - Block-scoped declaration not directly within block: bar
        if(false) {} else function bar() { return 3; }
                                   ^

./build/555/in.js:9: ERROR - Block-scoped declaration not directly within block: baz
        if(true) function baz() { return 4; } else {}
                          ^

./build/555/in.js:10: ERROR - Block-scoped declaration not directly within block: qux
        if(false) function qux() { return 5; } else function qux() { return 6; }
                           ^

./build/555/in.js:10: ERROR - Block-scoped declaration not directly within block: qux
        if(false) function qux() { return 5; } else function qux() { return 6; }
                                                             ^

5 error(s), 0 warning(s)
--------------------------------------------------------------------------------
