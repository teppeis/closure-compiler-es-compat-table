// subclassing / Function is subclassable / correct prototype chain
module.exports = () => {
  class C extends Function {}
  var c = new C("return 'foo';");
  return c instanceof C && c instanceof Function && Object.getPrototypeOf(C) === Function;

};
----------------------------------------------------------
Apr 17, 2018 11:34:34 PM com.google.javascript.jscomp.PhaseOptimizer$NamedPass process
警告: Skipping pass rewriteScriptsToEs6Modules
es6/v20180101/subclassing/Function_is_subclassable/correct_prototype_chain/in.js:3: ERROR - This code cannot be converted from ES6. extending native class: Function
  class C extends Function {}
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^

1 error(s), 0 warning(s)
