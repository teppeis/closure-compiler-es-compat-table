// built-ins / Promise / basic functionality
module.exports = (asyncTestPassed) => {
  var p1 = new Promise(function(resolve, reject) { resolve("foo"); });
  var p2 = new Promise(function(resolve, reject) { reject("quux"); });
  var score = 0;
  function thenFn(result)  { score += (result === "foo");  check(); }
  function catchFn(result) { score += (result === "quux"); check(); }
  function shouldNotRun(result)  { score = -Infinity;   }
  p1.then(thenFn, shouldNotRun);
  p2.then(shouldNotRun, catchFn);
  p1.catch(shouldNotRun);
  p2.catch(catchFn);
  p1.then(function() {
    // Promise.prototype.then() should return a new Promise
    score += p1.then() !== p1;
    check();
  });
  function check() {
    if (score === 4) asyncTestPassed();
  }

};
----------------------------------------------------------
/tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler)
/tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler)
