// built-ins / Proxy / "defineProperty" handler invariants
module.exports = () => {
  var passed = false;
  new Proxy({},{});
  // A property cannot be added, if the target object is not extensible.
  var proxied = Object.preventExtensions({});
  var proxy = new Proxy(proxied, {
    defineProperty: function() {
      passed = true;
      return true;
    }
  });
  try {
    Object.defineProperty(proxy, "foo", { value: 2 });
    return false;
  } catch(e) {}
  // A property cannot be non-configurable, unless there exists a corresponding
  // non-configurable own property of the target object.
  try {
    Object.defineProperty(
      new Proxy({ bar: true }, {
        defineProperty: function () {
          return true;
        }
      }),
      "bar",
      { value: 5, configurable: false, writable: true, enumerable: true }
    );
    return false;
  } catch(e) {}
  return passed;

};
----------------------------------------------------------
Process spawn error. Is java in the path?
spawn /tmp/faast/ca8527b9-8a47-47d8-857d-2e134b9fd26f/node_modules/google-closure-compiler-linux/compiler EACCES
