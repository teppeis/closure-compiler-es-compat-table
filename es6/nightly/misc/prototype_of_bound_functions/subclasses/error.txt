// misc / prototype of bound functions / subclasses
module.exports = () => {
  function correctProtoBound(superclass) {
    class C extends superclass {
      constructor() {
        return Object.create(null);
      }
    }
    var boundF = Function.prototype.bind.call(C, null);
    return Object.getPrototypeOf(boundF) === Object.getPrototypeOf(C);
  }
  return correctProtoBound(function(){})
&& correctProtoBound(Array)
&& correctProtoBound(null);

};
----------------------------------------------------------
/tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler)
/tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/faast/91a95ce6-63dc-430b-b8b0-6705f8cdc079/node_modules/google-closure-compiler-linux/compiler)
