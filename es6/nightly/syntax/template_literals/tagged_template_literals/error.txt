// syntax / template literals / tagged template literals
module.exports = () => {
  var called = false;
  function fn(parts, a, b) {
    called = true;
    return parts instanceof Array &&
parts[0]     === "foo"      &&
parts[1]     === "bar\n"    &&
parts.raw[0] === "foo"      &&
parts.raw[1] === "bar\\n"   &&
a === 123                   &&
b === 456;
  }
  return fn `foo${123}bar\n${456}` && called;

};
----------------------------------------------------------
/tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler)
/tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler)
