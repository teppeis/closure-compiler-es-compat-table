// optimisation / proper tail calls (tail call optimisation) / mutual recursion
module.exports = () => {
  "use strict";
  function f(n){
    if (n <= 0) {
      return  "foo";
    }
    return g(n - 1);
  }
  function g(n){
    if (n <= 0) {
      return  "bar";
    }
    return f(n - 1);
  }
  return f(1e6) === "foo" && f(1e6+1) === "bar";

};
----------------------------------------------------------
/tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler)
/tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/faast/d5fab9bb-d68d-4561-bc67-db6eb44aae72/node_modules/google-closure-compiler-linux/compiler)
