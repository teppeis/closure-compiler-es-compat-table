// annex b / non-strict function semantics / function statements in if-statement clauses
module.exports = () => {
// Note: only available outside of strict mode.
  if (!this) return false;
  if(true) function foo() { return 2; }
  if(false) {} else function bar() { return 3; }
  if(true) function baz() { return 4; } else {}
  if(false) function qux() { return 5; } else function qux() { return 6; }
  return foo() === 2 && bar() === 3 && baz() === 4 && qux() === 6;

};
----------------------------------------------------------
es6/v20181210/annex_b/non-strict_function_semantics/function_statements_in_if-statement_clauses/in.js:5: ERROR - Block-scoped declaration not directly within block: foo
  if(true) function foo() { return 2; }
                    ^^^

es6/v20181210/annex_b/non-strict_function_semantics/function_statements_in_if-statement_clauses/in.js:6: ERROR - Block-scoped declaration not directly within block: bar
  if(false) {} else function bar() { return 3; }
                             ^^^

es6/v20181210/annex_b/non-strict_function_semantics/function_statements_in_if-statement_clauses/in.js:7: ERROR - Block-scoped declaration not directly within block: baz
  if(true) function baz() { return 4; } else {}
                    ^^^

es6/v20181210/annex_b/non-strict_function_semantics/function_statements_in_if-statement_clauses/in.js:8: ERROR - Block-scoped declaration not directly within block: qux
  if(false) function qux() { return 5; } else function qux() { return 6; }
                     ^^^

es6/v20181210/annex_b/non-strict_function_semantics/function_statements_in_if-statement_clauses/in.js:8: ERROR - Block-scoped declaration not directly within block: qux
  if(false) function qux() { return 5; } else function qux() { return 6; }
                                                       ^^^

5 error(s), 0 warning(s)
