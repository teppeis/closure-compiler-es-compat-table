// built-ins / Proxy / "isExtensible" handler invariant
module.exports = () => {
  var passed = false;
  new Proxy({},{});
  // [[IsExtensible]] applied to the proxy object must return the same value
  // as [[IsExtensible]] applied to the proxy object's target object with the same argument.
  try {
    Object.isExtensible(new Proxy({}, {
      isExtensible: function (t) {
        passed = true;
        return false;
      }
    }));
    return false;
  } catch(e) {}
  try {
    Object.isExtensible(new Proxy(Object.preventExtensions({}), {
      isExtensible: function (t) {
        return true;
      }
    }));
    return false;
  } catch(e) {}
  return true;

};
----------------------------------------------------------
es6/v20210106/built-ins/Proxy/isExtensible_handler_invariant/in.js:8:4: WARNING - [JSC_USELESS_CODE] Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
   8|     Object.isExtensible(new Proxy({}, {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   9|       isExtensible: function (t) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
  12|       }
      ^^^^^^^
  13|     }));
      ^^^^^^^

es6/v20210106/built-ins/Proxy/isExtensible_handler_invariant/in.js:17:4: WARNING - [JSC_USELESS_CODE] Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
  17|     Object.isExtensible(new Proxy(Object.preventExtensions({}), {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  18|       isExtensible: function (t) {
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
  20|       }
      ^^^^^^^
  21|     }));
      ^^^^^^^

0 error(s), 2 warning(s)
