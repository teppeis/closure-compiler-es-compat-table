// subclassing / Function is subclassable / can be used with "new"
module.exports = function() {
class C extends Function {}
        var c = new C("this.bar = 2;");
        c.prototype.baz = 3;
        return new c().bar === 2 && new c().baz === 3;
      
};
----------------------------------------------------------
/Users/teppeis/src/github.com/teppeis/closure-compiler-es6-compat-table/es6/v20180204/subclassing/Function_is_subclassable/can_be_used_with_new/in.js:3: ERROR - This code cannot be converted from ES6. extending native class: Function
class C extends Function {}
^^^^^^^^^^^^^^^^^^^^^^^^^^^

1 error(s), 0 warning(s)
