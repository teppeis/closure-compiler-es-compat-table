// built-ins / Proxy / "isExtensible" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // [[IsExtensible]] applied to the proxy object must return the same value
        // as [[IsExtensible]] applied to the proxy object's target object with the same argument.
        try {
          Object.isExtensible(new Proxy({}, {
            isExtensible: function (t) {
              passed = true;
              return false;
            }
          }));
          return false;
        } catch(e) {}
        try {
          Object.isExtensible(new Proxy(Object.preventExtensions({}), {
            isExtensible: function (t) {
              return true;
            }
          }));
          return false;
        } catch(e) {}
        return true;
      
};
----------------------------------------------------------
/Users/teppeis/src/github.com/teppeis/closure-compiler-es6-compat-table/es6/v20180319/built-ins/Proxy/isExtensible_handler_invariant/in.js:8: WARNING - Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
          Object.isExtensible(new Proxy({}, {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

/Users/teppeis/src/github.com/teppeis/closure-compiler-es6-compat-table/es6/v20180319/built-ins/Proxy/isExtensible_handler_invariant/in.js:17: WARNING - Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
          Object.isExtensible(new Proxy(Object.preventExtensions({}), {
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

0 error(s), 2 warning(s)
