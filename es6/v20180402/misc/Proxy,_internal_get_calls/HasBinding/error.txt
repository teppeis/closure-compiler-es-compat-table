// misc / Proxy, internal 'get' calls / HasBinding
module.exports = function() {
  // HasBinding -> Get -> [[Get]]
  var get = [];
  var p = new Proxy(
    { foo: 1 },
    {
      get: function(o, k) {
        get.push(k);
        return o[k];
      }
    }
  );
  p[Symbol.unscopables] = p;
  with (p) {
    typeof foo;
  }
  return get[0] === Symbol.unscopables && get.slice(1) + "" === "foo";
};

----------------------------------------------------------
/Users/teppeis/src/github.com/teppeis/closure-compiler-es6-compat-table/es6/v20180402/misc/Proxy,_internal_get_calls/HasBinding/in.js:16: WARNING - Suspicious code. The result of the 'typeof' operator is not being used.
    typeof foo;
    ^^^^^^^^^^

/Users/teppeis/src/github.com/teppeis/closure-compiler-es6-compat-table/es6/v20180402/misc/Proxy,_internal_get_calls/HasBinding/in.js:15: ERROR - The with statement cannot be used in strict mode.
  with (p) {
  ^^^^^^^^^^

1 error(s), 1 warning(s)
