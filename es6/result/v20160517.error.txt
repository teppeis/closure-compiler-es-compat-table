// spread (...) operator: spreading non-iterables is a runtime error
module.exports = function() {
try {
          Math.max(...2);
        } catch(e) {
          return Math.max(...[1, 2, 3]) === 3;
        }
      
};
./build/28/in.js:4: WARNING - Suspicious code. The result of the extern function call 'Math.max' is not being used.
          Math.max(...2);
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// object literal extensions: string-keyed shorthand methods
module.exports = function() {
return ({ "foo bar"() { return 4; } })["foo bar"]() === 4;
      
};
./build/32/in.js:3: ERROR - Parse error. '[' expected
return ({ "foo bar"() { return 4; } })["foo bar"]() === 4;
          ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// object literal extensions: computed accessors
module.exports = function() {
var x = 'y',
            valueSet,
            obj = {
              get [x] () { return 1 },
              set [x] (value) { valueSet = value }
            };
        obj.y = 'foo';
        return obj.y === 1 && valueSet === 'foo';
      
};
./build/34/in.js:6: ERROR - ES6 transpilation of 'computed getter/setter in an object literal' is not yet implemented.
              get [x] () { return 1 },
              ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// for..of loops: with arrays
module.exports = function() {
var arr = [5];
        for (var item of arr)
          return item === 5;
      
};
./build/35/in.js:4: WARNING - unreachable code
        for (var item of arr)
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// for..of loops: iterator closing, break
module.exports = function() {
var closed = false;
        var iter = __createIterableObject([1, 2, 3], {
          'return': function(){ closed = true; return {}; }
        });
        for (var it of iter) break;
        return closed;
      
};
./build/42/in.js:7: WARNING - unreachable code
        for (var it of iter) break;
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// for..of loops: iterator closing, throw
module.exports = function() {
var closed = false;
        var iter = __createIterableObject([1, 2, 3], {
          'return': function(){ closed = true; return {}; }
        });
        try {
          for (var it of iter) throw 0;
        } catch(e){}
        return closed;
      
};
./build/43/in.js:8: WARNING - unreachable code
          for (var it of iter) throw 0;
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// RegExp "y" and "u" flags: "y" flag
module.exports = function() {
var re = new RegExp('\\w', 'y');
        re.exec('xy');
        return (re.exec('xy')[0] === 'y');
      
};
./build/53/in.js:3: WARNING - Invalid flags to RegExp constructor: STRING y 3 [source_file: ./build/53/in.js]
var re = new RegExp('\\w', 'y');
                           ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// RegExp "y" and "u" flags: "y" flag, lastIndex
module.exports = function() {
var re = new RegExp('yy', 'y');
        re.lastIndex = 3;
        var result = re.exec('xxxyyxx')[0];
        return result === 'yy' && re.lastIndex === 5;
      
};
./build/54/in.js:3: WARNING - Invalid flags to RegExp constructor: STRING y 3 [source_file: ./build/54/in.js]
var re = new RegExp('yy', 'y');
                          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// destructuring, declarations: trailing commas in iterable patterns
module.exports = function() {
var [a,] = [1];
        return a === 1;
      
};
./build/66/in.js:3: ERROR - Parse error. Array pattern may not end with a comma
var [a,] = [1];
       ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// destructuring, declarations: in for-of loop heads
module.exports = function() {
for(var [i, j, k] of [[1,2,3]]) {
          return i === 1 && j === 2 && k === 3;
        }
      
};
./build/75/in.js:3: WARNING - unreachable code
for(var [i, j, k] of [[1,2,3]]) {
^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// destructuring, assignment: iterable destructuring expression
module.exports = function() {
var a, b, iterable = [1,2];
        return ([a, b] = iterable) === iterable;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ARRAY_PATTERN): ./build/88/in.js:4:16
        return ([a, b] = iterable) === iterable;
  Parent(ASSIGN): ./build/88/in.js:4:16
        return ([a, b] = iterable) === iterable;

	at com.google.common.base.Preconditions.checkState(Preconditions.java:159)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitArrayPattern(Es6RewriteDestructuring.java:280)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:73)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:623)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:45)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:805)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:710)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:659)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:656)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException
	... 30 more
--------------------------------------------------------------------------------
// destructuring, assignment: chained iterable destructuring
module.exports = function() {
var a,b,c,d;
        [a,b] = [c,d] = [1,2];
        return a === 1 && b === 2 && c === 1 && d === 2;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ARRAY_PATTERN): ./build/89/in.js:4:16
        [a,b] = [c,d] = [1,2];
  Parent(ASSIGN): ./build/89/in.js:4:16
        [a,b] = [c,d] = [1,2];

	at com.google.common.base.Preconditions.checkState(Preconditions.java:159)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitArrayPattern(Es6RewriteDestructuring.java:280)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:73)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:623)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:45)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:805)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:710)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:659)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:656)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException
	... 30 more
--------------------------------------------------------------------------------
// destructuring, assignment: trailing commas in iterable patterns
module.exports = function() {
var a;
        [a,] = [1];
        return a === 1;
      
};
./build/90/in.js:4: ERROR - Parse error. Array pattern may not end with a comma
        [a,] = [1];
           ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// destructuring, assignment: object destructuring expression
module.exports = function() {
var a, b, obj = { a:1, b:2 };
        return ({a,b} = obj) === obj;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

Unexpected OBJECT_PATTERN parent: ASSIGN 4 [source_file: ./build/94/in.js]
  Node(OBJECT_PATTERN): ./build/94/in.js:4:16
        return ({a,b} = obj) === obj;
  Parent(ASSIGN): ./build/94/in.js:4:16
        return ({a,b} = obj) === obj;

	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitObjectPattern(Es6RewriteDestructuring.java:182)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:76)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:623)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:45)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:805)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:710)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:659)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:656)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: Unexpected OBJECT_PATTERN parent: ASSIGN 4 [source_file: ./build/94/in.js]
	... 29 more
--------------------------------------------------------------------------------
// destructuring, assignment: chained object destructuring
module.exports = function() {
var a,b,c,d;
        ({a,b} = {c,d} = {a:1,b:2,c:3,d:4});
        return a === 1 && b === 2 && c === 3 && d === 4;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

Unexpected OBJECT_PATTERN parent: ASSIGN 4 [source_file: ./build/96/in.js]
  Node(OBJECT_PATTERN): ./build/96/in.js:4:17
        ({a,b} = {c,d} = {a:1,b:2,c:3,d:4});
  Parent(ASSIGN): ./build/96/in.js:4:17
        ({a,b} = {c,d} = {a:1,b:2,c:3,d:4});

	at com.google.javascript.jscomp.Es6RewriteDestructuring.visitObjectPattern(Es6RewriteDestructuring.java:182)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.visit(Es6RewriteDestructuring.java:76)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:623)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteDestructuring.process(Es6RewriteDestructuring.java:45)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:805)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:710)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:659)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:656)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: Unexpected OBJECT_PATTERN parent: ASSIGN 4 [source_file: ./build/96/in.js]
	... 29 more
--------------------------------------------------------------------------------
// destructuring, parameters: trailing commas in iterable patterns
module.exports = function() {
return function([a,]) {
          return a === 1;
        }([1]);
      
};
./build/112/in.js:3: ERROR - Parse error. Array pattern may not end with a comma
return function([a,]) {
                   ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// new.target: in constructors
module.exports = function() {
var passed = false;
        new function f() {
          passed = (new.target === f);
        }();
        (function() {
          passed &= (new.target === undefined);
        }());
        return passed;
      
};
./build/129/in.js:5: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
          passed = (new.target === f);
                    ^

./build/129/in.js:8: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
          passed &= (new.target === undefined);
                     ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// new.target: assignment is an early error
module.exports = function() {
var passed = false;
        new function f() {
          passed = (new.target === f);
        }();

        try {
          Function("new.target = function(){};");
        } catch(e) {
          return passed;
        }
      
};
./build/130/in.js:9: WARNING - Suspicious code. The result of the extern function call 'Function' is not being used.
          Function("new.target = function(){};");
          ^

./build/130/in.js:5: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
          passed = (new.target === f);
                    ^

1 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// const: for loop statement scope
module.exports = function() {
const baz = 1;
       for(const baz = 0; false;) {}
       return baz === 1;
       
};
./build/135/in.js:4: WARNING - unreachable code
       for(const baz = 0; false;) {}
                                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// const: temporal dead zone
module.exports = function() {
var passed = (function(){ try { qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        const qux = 456;
        fn();
        return passed;
      
};
./build/138/in.js:3: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
var passed = (function(){ try { qux; } catch(e) { return true; }}());
                                ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// const: for loop statement scope (strict mode)
module.exports = function() {
'use strict';
        const baz = 1;
        for(const baz = 0; false;) {}
        return baz === 1;
      
};
./build/143/in.js:5: WARNING - unreachable code
        for(const baz = 0; false;) {}
                                   ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// const: temporal dead zone (strict mode)
module.exports = function() {
'use strict';
        var passed = (function(){ try { qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        const qux = 456;
        fn();
        return passed;
      
};
./build/146/in.js:4: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        var passed = (function(){ try { qux; } catch(e) { return true; }}());
                                        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// let: for loop statement scope
module.exports = function() {
let baz = 1;
        for(let baz = 0; false;) {}
        return baz === 1;
      
};
./build/150/in.js:4: WARNING - unreachable code
        for(let baz = 0; false;) {}
                                 ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// let: temporal dead zone
module.exports = function() {
var passed = (function(){ try {  qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        let qux = 456;
        fn();
        return passed;
      
};
./build/151/in.js:3: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
var passed = (function(){ try {  qux; } catch(e) { return true; }}());
                                 ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// let: for loop statement scope (strict mode)
module.exports = function() {
'use strict';
        let baz = 1;
        for(let baz = 0; false;) {}
        return baz === 1;
      
};
./build/156/in.js:5: WARNING - unreachable code
        for(let baz = 0; false;) {}
                                 ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// let: temporal dead zone (strict mode)
module.exports = function() {
'use strict';
        var passed = (function(){ try {  qux; } catch(e) { return true; }}());
        function fn() { passed &= qux === 456; }
        let qux = 456;
        fn();
        return passed;
      
};
./build/157/in.js:4: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        var passed = (function(){ try {  qux; } catch(e) { return true; }}());
                                         ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// arrow functions: lexical "super" binding in constructors
module.exports = function() {
var received;

        class B {
          constructor (arg) {
            received = arg;
          }
        }
        class C extends B {
          constructor () {
            var callSuper = () => super('foo');
            callSuper();
          }
        }
        return new C instanceof C && received === 'foo'
      
};
./build/170/in.js:12: ERROR - super() not allowed except in the constructor of a subclass
            var callSuper = () => super('foo');
                                  ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// arrow functions: lexical "new.target" binding
module.exports = function() {
function C() {
          return x => new.target;
        }
        return new C()() === C && C()() === undefined;
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(FUNCTION ): ./build/172/in.js:4:17
          return x => new.target;
  Parent(RETURN): ./build/172/in.js:4:10
          return x => new.target;

	at com.google.common.base.Preconditions.checkState(Preconditions.java:159)
	at com.google.javascript.rhino.IR.returnNode(IR.java:193)
	at com.google.javascript.jscomp.Es6RewriteArrowFunction.visitArrowFunction(Es6RewriteArrowFunction.java:69)
	at com.google.javascript.jscomp.Es6RewriteArrowFunction.shouldTraverse(Es6RewriteArrowFunction.java:56)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:602)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6RewriteArrowFunction.process(Es6RewriteArrowFunction.java:43)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:805)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:710)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:659)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:656)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException
	... 33 more
--------------------------------------------------------------------------------
// class: class expression
module.exports = function() {
return typeof class C {} === "function";
      
};
./build/175/in.js:3: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
return typeof class C {} === "function";
       ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: anonymous class
module.exports = function() {
return typeof class {} === "function";
      
};
./build/176/in.js:3: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
return typeof class {} === "function";
       ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: string-keyed methods
module.exports = function() {
class C {
          "foo bar"() { return 2; }
        }
        return typeof C.prototype["foo bar"] === "function"
          && new C()["foo bar"]() === 2;
      
};
./build/179/in.js:4: ERROR - Parse error. '}' expected
          "foo bar"() { return 2; }
          ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: computed static accessor properties
module.exports = function() {
var garply = "foo", grault = "bar", baz = false;
        class C {
          static get [garply]() { return "foo"; }
          static set [grault](x) { baz = x; }
        }
        C.bar = true;
        return C.foo === "foo" && baz;
      
};
./build/187/in.js:5: ERROR - ES6 transpilation of 'Static computed property' is not yet implemented.
          static get [garply]() { return "foo"; }
          ^

./build/187/in.js:6: ERROR - ES6 transpilation of 'Static computed property' is not yet implemented.
          static set [grault](x) { baz = x; }
          ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: class name is lexically scoped
module.exports = function() {
class C {
          method() { return typeof C === "function"; }
        }
        var M = C.prototype.method;
        C = undefined;
        return C === undefined && M();
      
};
./build/188/in.js:7: ERROR - Class names defined inside a function cannot be reassigned.
        C = undefined;
        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: implicit strict mode
module.exports = function() {
class C {
          static method() { return this === undefined; }
        }
        return (0,C.method)();
      
};
./build/191/in.js:6: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        return (0,C.method)();
                ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// class: extends expressions
module.exports = function() {
var B;
        class C extends (B = class {}) {}
        return new C() instanceof B
          && B.isPrototypeOf(C);
      
};
./build/194/in.js:4: ERROR - The class in an extends clause must be a qualified name.
        class C extends (B = class {}) {}
                         ^

./build/194/in.js:4: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
        class C extends (B = class {}) {}
                         ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: extends null
module.exports = function() {
class C extends null {
          constructor() { return Object.create(null); }
        }
        return Function.prototype.isPrototypeOf(C)
          && Object.getPrototypeOf(C.prototype) === null;
      
};
./build/195/in.js:4: ERROR - constructor is missing a call to super()
          constructor() { return Object.create(null); }
          ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// class: new.target
module.exports = function() {
var passed = false;
        new function f() {
          passed = new.target === f;
        }();

        class A {
          constructor() {
            passed &= new.target === B;
          }
        }
        class B extends A {}
        new B();
        return passed;
      
};
./build/196/in.js:5: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
          passed = new.target === f;
                   ^

./build/196/in.js:10: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
            passed &= new.target === B;
                      ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// super: in methods, property access
module.exports = function() {
class B {}
        B.prototype.qux = "foo";
        B.prototype.corge = "baz";
        class C extends B {
          quux(a) { return super.qux + a + super["corge"]; }
        }
        C.prototype.qux = "garply";
        return new C().quux("bar") === "foobarbaz";
      
};
./build/199/in.js:7: ERROR - ES6 transpilation of 'Only calls to super or to a method of super are supported.' is not yet implemented.
          quux(a) { return super.qux + a + super["corge"]; }
                           ^

./build/199/in.js:7: ERROR - ES6 transpilation of 'Only calls to super or to a method of super are supported.' is not yet implemented.
          quux(a) { return super.qux + a + super["corge"]; }
                                           ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// super: constructor calls use correct "new.target" binding
module.exports = function() {
var passed;
        class B {
          constructor() { passed = (new.target === C); }
        }
        class C extends B {
          constructor() { super(); }
        }
        new C();
        return passed;
      
};
./build/202/in.js:5: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
          constructor() { passed = (new.target === C); }
                                    ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// generators: string-keyed shorthand generator methods
module.exports = function() {
var o = {
          * "foo bar"() {
            yield 5; yield 6;
          },
        };
        var iterator = o["foo bar"]();
        var item = iterator.next();
        var passed = item.value === 5 && item.done === false;
        item = iterator.next();
        passed    &= item.value === 6 && item.done === false;
        item = iterator.next();
        passed    &= item.value === undefined && item.done === true;
        return passed;
      
};
./build/227/in.js:4: ERROR - Parse error. '[' expected
          * "foo bar"() {
            ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// generators: shorthand generators can't be constructors
module.exports = function() {
class C {
          * generator() {
            yield 5; yield 6;
          }
        };
        try {
          Function("class D { * constructor() { return {}; } }");
        } catch(e) {
          return true;
        }
      
};
./build/231/in.js:9: WARNING - Suspicious code. The result of the extern function call 'Function' is not being used.
          Function("class D { * constructor() { return {}; } }");
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: basic functionality
module.exports = function() {
var key = {};
        var weakmap = new WeakMap();

        weakmap.set(key, 123);

        return weakmap.has(key) && weakmap.get(key) === 123;
      
};
./build/316/in.js:4: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var weakmap = new WeakMap();
                          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: constructor arguments
module.exports = function() {
var key1 = {};
        var key2 = {};
        var weakmap = new WeakMap([[key1, 123], [key2, 456]]);

        return weakmap.has(key1) && weakmap.get(key1) === 123 &&
               weakmap.has(key2) && weakmap.get(key2) === 456;
      
};
./build/317/in.js:5: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var weakmap = new WeakMap([[key1, 123], [key2, 456]]);
                          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: constructor requires new
module.exports = function() {
new WeakMap();
        try {
          WeakMap();
          return false;
        } catch(e) {
          return true;
        }
      
};
./build/318/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new WeakMap();
    ^

./build/318/in.js:5: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          WeakMap();
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// WeakMap: constructor accepts null
module.exports = function() {
new WeakMap(null);
        return true;
      
};
./build/319/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new WeakMap(null);
    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: constructor invokes set
module.exports = function() {
var passed = false;
        var _set = WeakMap.prototype.set;

        WeakMap.prototype.set = function(k, v) {
          passed = true;
        };

        new WeakMap([ [{ }, 42] ]);
        WeakMap.prototype.set = _set;

        return passed;
      
};
./build/320/in.js:4: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var _set = WeakMap.prototype.set;
                   ^

./build/320/in.js:6: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        WeakMap.prototype.set = function(k, v) {
        ^

./build/320/in.js:10: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new WeakMap([ [{ }, 42] ]);
            ^

./build/320/in.js:11: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        WeakMap.prototype.set = _set;
        ^

0 error(s), 4 warning(s)
--------------------------------------------------------------------------------
// WeakMap: frozen objects as keys
module.exports = function() {
var f = Object.freeze({});
        var m = new WeakMap;
        m.set(f, 42);
        return m.get(f) === 42;
      
};
./build/321/in.js:4: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var m = new WeakMap;
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: iterator closing
module.exports = function() {
var closed = false;
        var iter = global.__createIterableObject([1, 2, 3], {
          'return': function(){ closed = true; return {}; }
        });
        try {
          new WeakMap(iter);
        } catch(e){}
        return closed;
      
};
./build/322/in.js:8: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new WeakMap(iter);
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: WeakMap.prototype.set returns this
module.exports = function() {
var weakmap = new WeakMap();
        var key = {};
        return weakmap.set(key, 0) === weakmap;
      
};
./build/323/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
var weakmap = new WeakMap();
                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: WeakMap.prototype.delete
module.exports = function() {
return typeof WeakMap.prototype.delete === "function";
      
};
./build/324/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return typeof WeakMap.prototype.delete === "function";
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: no WeakMap.prototype.clear method
module.exports = function() {
if (!("clear" in WeakMap.prototype)) {
          return true;
        }
        var m = new WeakMap();
        var key = {};
        m.set(key, 2);
        m.clear();
        return m.has(key);
      
};
./build/325/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
if (!("clear" in WeakMap.prototype)) {
                 ^

./build/325/in.js:6: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var m = new WeakMap();
                    ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// WeakMap: .has, .get and .delete methods accept primitives
module.exports = function() {
var m = new WeakMap;
        return m.has(1) === false
          && m.get(1) === undefined
          && m.delete(1) === false;
      
};
./build/326/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
var m = new WeakMap;
            ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakMap: WeakMap.prototype isn't an instance
module.exports = function() {
new WeakMap();
        var obj = {};
        try {
          WeakMap.prototype.has(obj);
        }
        catch(e) {
          return true;
        }
      
};
./build/327/in.js:3: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new WeakMap();
    ^

./build/327/in.js:6: WARNING - Built-in 'WeakMap' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          WeakMap.prototype.has(obj);
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// WeakSet: basic functionality
module.exports = function() {
var obj1 = {};
        var weakset = new WeakSet();

        weakset.add(obj1);
        weakset.add(obj1);

        return weakset.has(obj1);
      
};
./build/328/in.js:4: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var weakset = new WeakSet();
                          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: constructor arguments
module.exports = function() {
var obj1 = {}, obj2 = {};
        var weakset = new WeakSet([obj1, obj2]);

        return weakset.has(obj1) && weakset.has(obj2);
      
};
./build/329/in.js:4: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var weakset = new WeakSet([obj1, obj2]);
                          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: constructor requires new
module.exports = function() {
new WeakSet();
        try {
          WeakSet();
          return false;
        } catch(e) {
          return true;
        }
      
};
./build/330/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new WeakSet();
    ^

./build/330/in.js:5: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          WeakSet();
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// WeakSet: constructor accepts null
module.exports = function() {
new WeakSet(null);
        return true;
      
};
./build/331/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new WeakSet(null);
    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: constructor invokes add
module.exports = function() {
var passed = false;
        var _add = WeakSet.prototype.add;

        WeakSet.prototype.add = function(v) {
          passed = true;
        };

        new WeakSet([ { } ]);
        WeakSet.prototype.add = _add;

        return passed;
      
};
./build/332/in.js:4: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var _add = WeakSet.prototype.add;
                   ^

./build/332/in.js:6: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        WeakSet.prototype.add = function(v) {
        ^

./build/332/in.js:10: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new WeakSet([ { } ]);
            ^

./build/332/in.js:11: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        WeakSet.prototype.add = _add;
        ^

0 error(s), 4 warning(s)
--------------------------------------------------------------------------------
// WeakSet: iterator closing
module.exports = function() {
var closed = false;
        var iter = global.__createIterableObject([1, 2, 3], {
          'return': function(){ closed = true; return {}; }
        });
        try {
          new WeakSet(iter);
        } catch(e){}
        return closed;
      
};
./build/333/in.js:8: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new WeakSet(iter);
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: WeakSet.prototype.add returns this
module.exports = function() {
var weakset = new WeakSet();
        var obj = {};
        return weakset.add(obj) === weakset;
      
};
./build/334/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
var weakset = new WeakSet();
                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: WeakSet.prototype.delete
module.exports = function() {
return typeof WeakSet.prototype.delete === "function";
      
};
./build/335/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return typeof WeakSet.prototype.delete === "function";
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: no WeakSet.prototype.clear method
module.exports = function() {
if (!("clear" in WeakSet.prototype)) {
          return true;
        }
        var s = new WeakSet();
        var key = {};
        s.add(key);
        s.clear();
        return s.has(key);
      
};
./build/336/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
if (!("clear" in WeakSet.prototype)) {
                 ^

./build/336/in.js:6: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var s = new WeakSet();
                    ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// WeakSet: .has and .delete methods accept primitives
module.exports = function() {
var s = new WeakSet;
        return s.has(1) === false
          && s.delete(1) === false;
      
};
./build/337/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
var s = new WeakSet;
            ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// WeakSet: WeakSet.prototype isn't an instance
module.exports = function() {
new WeakSet();
        var obj = {};
        try {
          WeakSet.prototype.has(obj);
        }
        catch(e) {
          return true;
        }
      
};
./build/338/in.js:3: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new WeakSet();
    ^

./build/338/in.js:6: WARNING - Built-in 'WeakSet' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          WeakSet.prototype.has(obj);
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: constructor requires new
module.exports = function() {
new Proxy({}, {});
        try {
          Proxy({}, {});
          return false;
        } catch(e) {
          return true;
        }
      
};
./build/339/in.js:3: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new Proxy({}, {});
    ^

./build/339/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Proxy({}, {});
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: no "prototype" property
module.exports = function() {
new Proxy({}, {});
        return !Proxy.hasOwnProperty('prototype');
      
};
./build/340/in.js:3: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
new Proxy({}, {});
    ^

./build/340/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        return !Proxy.hasOwnProperty('prototype');
                ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "get" handler
module.exports = function() {
var proxied = { };
        var proxy = new Proxy(proxied, {
          get: function (t, k, r) {
            return t === proxied && k === "foo" && r === proxy && 5;
          }
        });
        return proxy.foo === 5;
      
};
./build/341/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "get" handler, instances of proxies
module.exports = function() {
var proxied = { };
        var proxy = Object.create(new Proxy(proxied, {
          get: function (t, k, r) {
            return t === proxied && k === "foo" && r === proxy && 5;
          }
        }));
        return proxy.foo === 5;
      
};
./build/342/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = Object.create(new Proxy(proxied, {
                                      ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "get" handler invariants
module.exports = function() {
var passed = false;
        var proxied = { };
        var proxy = new Proxy(proxied, {
          get: function () {
            passed = true;
            return 4;
          }
        });
        // The value reported for a property must be the same as the value of the corresponding
        // target object property if the target object property is a non-writable,
        // non-configurable own data property.
        Object.defineProperty(proxied, "foo", { value: 5, enumerable: true });
        try {
          proxy.foo;
          return false;
        }
        catch(e) {}
        // The value reported for a property must be undefined if the corresponding target
        // object property is a non-configurable own accessor property that has undefined
        // as its [[Get]] attribute.
        Object.defineProperty(proxied, "bar",
          { set: function(){}, enumerable: true });
        try {
          proxy.bar;
          return false;
        }
        catch(e) {}
        return passed;
      
};
./build/343/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

./build/343/in.js:16: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
          proxy.foo;
          ^

./build/343/in.js:26: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
          proxy.bar;
          ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// Proxy: "set" handler
module.exports = function() {
var proxied = { };
        var passed = false;
        var proxy = new Proxy(proxied, {
          set: function (t, k, v, r) {
            passed = t === proxied && k + v === "foobar" && r === proxy;
          }
        });
        proxy.foo = "bar";
        return passed;
      
};
./build/344/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "set" handler, instances of proxies
module.exports = function() {
var proxied = { };
        var passed = false;
        var proxy = Object.create(new Proxy(proxied, {
          set: function (t, k, v, r) {
            passed = t === proxied && k + v === "foobar" && r === proxy;
          }
        }));
        proxy.foo = "bar";
        return passed;
      
};
./build/345/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = Object.create(new Proxy(proxied, {
                                      ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "set" handler invariants
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // Cannot change the value of a property to be different from the value of
        // the corresponding target object if the corresponding target object
        // property is a non-writable, non-configurable own data property.
        var proxied = {};
        var proxy = new Proxy(proxied, {
          set: function () {
            passed = true;
            return true;
          }
        });
        Object.defineProperty(proxied, "foo", { value: 2, enumerable: true });
        proxy.foo = 2;
        try {
          proxy.foo = 4;
          return false;
        } catch(e) {}
        // Cannot set the value of a property if the corresponding target
        // object property is a non-configurable own accessor property
        // that has undefined as its [[Set]] attribute.
        Object.defineProperty(proxied, "bar",
          { get: function(){}, enumerable: true });
        try {
          proxy.bar = 2;
          return false;
        } catch(e) {}
        return passed;
      
};
./build/346/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/346/in.js:9: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "has" handler
module.exports = function() {
var proxied = {};
        var passed = false;
        "foo" in new Proxy(proxied, {
          has: function (t, k) {
            passed = t === proxied && k === "foo";
          }
        });
        return passed;
      
};
./build/347/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        "foo" in new Proxy(proxied, {
                     ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "has" handler, instances of proxies
module.exports = function() {
var proxied = {};
        var passed = false;
        "foo" in Object.create(new Proxy(proxied, {
          has: function (t, k) {
            passed = t === proxied && k === "foo";
          }
        }));
        return passed;
      
};
./build/348/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        "foo" in Object.create(new Proxy(proxied, {
                                   ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "has" handler invariants
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // A property cannot be reported as non-existent, if it exists as a
        // non-configurable own property of the target object.
        var proxied = {};
        var proxy = new Proxy(proxied, {
          has: function () {
            passed = true;
            return false;
          }
        });
        Object.defineProperty(proxied, "foo", { value: 2, writable: true, enumerable: true });
        try {
          'foo' in proxy;
          return false;
        } catch(e) {}
        // A property cannot be reported as non-existent, if it exists as an
        // own property of the target object and the target object is not extensible.
        proxied.bar = 2;
        Object.preventExtensions(proxied);
        try {
          'bar' in proxy;
          return false;
        } catch(e) {}
        return passed;
      
};
./build/349/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/349/in.js:8: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

./build/349/in.js:16: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
          'foo' in proxy;
          ^

./build/349/in.js:24: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
          'bar' in proxy;
          ^

0 error(s), 4 warning(s)
--------------------------------------------------------------------------------
// Proxy: "deleteProperty" handler
module.exports = function() {
var proxied = {};
        var passed = false;
        delete new Proxy(proxied, {
          deleteProperty: function (t, k) {
            passed = t === proxied && k === "foo";
          }
        }).foo;
        return passed;
      
};
./build/350/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        delete new Proxy(proxied, {
                   ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "deleteProperty" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // A property cannot be reported as deleted, if it exists as a non-configurable
        // own property of the target object.
        var proxied = {};
        Object.defineProperty(proxied, "foo", { value: 2, writable: true, enumerable: true });
        try {
          delete new Proxy(proxied, {
            deleteProperty: function () {
              passed = true;
              return true;
            }
          }).foo;
          return false;
        } catch(e) {}
        return passed;
      
};
./build/351/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/351/in.js:10: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          delete new Proxy(proxied, {
                     ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "getOwnPropertyDescriptor" handler
module.exports = function() {
var proxied = {};
        var fakeDesc = { value: "foo", configurable: true };
        var returnedDesc = Object.getOwnPropertyDescriptor(
          new Proxy(proxied, {
            getOwnPropertyDescriptor: function (t, k) {
              return t === proxied && k === "foo" && fakeDesc;
            }
          }),
          "foo"
        );
        return (returnedDesc.value     === fakeDesc.value
          && returnedDesc.configurable === fakeDesc.configurable
          && returnedDesc.writable     === false
          && returnedDesc.enumerable   === false);
      
};
./build/352/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy(proxied, {
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "getOwnPropertyDescriptor" handler invariants
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // A property cannot be reported as non-existent, if it exists as a non-configurable
        // own property of the target object.
        var proxied = {};
        var proxy = new Proxy(proxied, {
          getOwnPropertyDescriptor: function () {
            passed = true;
            return undefined;
          }
        });
        Object.defineProperty(proxied, "foo", { value: 2, writable: true, enumerable: true });
        try {
          Object.getOwnPropertyDescriptor(proxy, "foo");
          return false;
        } catch(e) {}
        // A property cannot be reported as non-existent, if it exists as an own property
        // of the target object and the target object is not extensible.
        proxied.bar = 3;
        Object.preventExtensions(proxied);
        try {
          Object.getOwnPropertyDescriptor(proxy, "bar");
          return false;
        } catch(e) {}
        // A property cannot be reported as existent, if it does not exists as an own property
        // of the target object and the target object is not extensible.
        try {
          Object.getOwnPropertyDescriptor(new Proxy(proxied, {
            getOwnPropertyDescriptor: function() {
              return { value: 2, configurable: true, writable: true, enumerable: true };
            }}), "baz");
          return false;
        } catch(e) {}
        // A property cannot be reported as non-configurable, if it does not exists as an own
        // property of the target object or if it exists as a configurable own property of
        // the target object.
        try {
          Object.getOwnPropertyDescriptor(new Proxy({}, {
            getOwnPropertyDescriptor: function() {
              return { value: 2, configurable: false, writable: true, enumerable: true };
            }}), "baz");
          return false;
        } catch(e) {}
        try {
          Object.getOwnPropertyDescriptor(new Proxy({baz:1}, {
            getOwnPropertyDescriptor: function() {
              return { value: 1, configurable: false, writable: true, enumerable: true };
            }}), "baz");
          return false;
        } catch(e) {}
        return passed;
      
};
./build/353/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/353/in.js:8: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

./build/353/in.js:16: WARNING - Suspicious code. The result of the extern function call 'Object.getOwnPropertyDescriptor' is not being used.
          Object.getOwnPropertyDescriptor(proxy, "foo");
          ^

./build/353/in.js:24: WARNING - Suspicious code. The result of the extern function call 'Object.getOwnPropertyDescriptor' is not being used.
          Object.getOwnPropertyDescriptor(proxy, "bar");
          ^

./build/353/in.js:30: WARNING - Suspicious code. The result of the extern function call 'Object.getOwnPropertyDescriptor' is not being used.
          Object.getOwnPropertyDescriptor(new Proxy(proxied, {
          ^

./build/353/in.js:30: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.getOwnPropertyDescriptor(new Proxy(proxied, {
                                              ^

./build/353/in.js:40: WARNING - Suspicious code. The result of the extern function call 'Object.getOwnPropertyDescriptor' is not being used.
          Object.getOwnPropertyDescriptor(new Proxy({}, {
          ^

./build/353/in.js:40: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.getOwnPropertyDescriptor(new Proxy({}, {
                                              ^

./build/353/in.js:47: WARNING - Suspicious code. The result of the extern function call 'Object.getOwnPropertyDescriptor' is not being used.
          Object.getOwnPropertyDescriptor(new Proxy({baz:1}, {
          ^

./build/353/in.js:47: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.getOwnPropertyDescriptor(new Proxy({baz:1}, {
                                              ^

0 error(s), 10 warning(s)
--------------------------------------------------------------------------------
// Proxy: "defineProperty" handler
module.exports = function() {
var proxied = {};
        var passed = false;
        Object.defineProperty(
          new Proxy(proxied, {
            defineProperty: function (t, k, d) {
              passed = t === proxied && k === "foo" && d.value === 5;
              return true;
            }
          }),
          "foo",
          { value: 5, configurable: true }
        );
        return passed;
      
};
./build/354/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy(proxied, {
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "defineProperty" handler invariants
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // A property cannot be added, if the target object is not extensible.
        var proxied = Object.preventExtensions({});
        var proxy = new Proxy(proxied, {
          defineProperty: function() {
            passed = true;
            return true;
          }
        });
        try {
          Object.defineProperty(proxy, "foo", { value: 2 });
          return false;
        } catch(e) {}
        // A property cannot be non-configurable, unless there exists a corresponding
        // non-configurable own property of the target object.
        try {
          Object.defineProperty(
            new Proxy({ bar: true }, {
              defineProperty: function () {
                return true;
              }
            }),
            "bar",
            { value: 5, configurable: false, writable: true, enumerable: true }
          );
          return false;
        } catch(e) {}
        return passed;
      
};
./build/355/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/355/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

./build/355/in.js:21: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
            new Proxy({ bar: true }, {
                ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// Proxy: "getPrototypeOf" handler
module.exports = function() {
var proxied = {};
        var fakeProto = {};
        var proxy = new Proxy(proxied, {
          getPrototypeOf: function (t) {
            return t === proxied && fakeProto;
          }
        });
        return Object.getPrototypeOf(proxy) === fakeProto;
      
};
./build/356/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var proxy = new Proxy(proxied, {
                        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "getPrototypeOf" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // If the target object is not extensible, [[GetPrototypeOf]] applied to the proxy object
        // must return the same value as [[GetPrototypeOf]] applied to the proxy object's target object.
        try {
          Object.getPrototypeOf(new Proxy(Object.preventExtensions({}), {
            getPrototypeOf: function () {
              passed = true;
              return {};
            }
          }));
          return false;
        } catch(e) {}
        return passed;
      
};
./build/357/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/357/in.js:8: WARNING - Suspicious code. The result of the extern function call 'Object.getPrototypeOf' is not being used.
          Object.getPrototypeOf(new Proxy(Object.preventExtensions({}), {
          ^

./build/357/in.js:8: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.getPrototypeOf(new Proxy(Object.preventExtensions({}), {
                                    ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// Proxy: "setPrototypeOf" handler
module.exports = function() {
var proxied = {};
        var newProto = {};
        var passed = false;
        Object.setPrototypeOf(
          new Proxy(proxied, {
            setPrototypeOf: function (t, p) {
              passed = t === proxied && p === newProto;
              return true;
            }
          }),
          newProto
        );
        return passed;
      
};
./build/358/in.js:6: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Object.setPrototypeOf(
        ^

./build/358/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy(proxied, {
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "setPrototypeOf" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        Object.setPrototypeOf({},{});
        // If the target object is not extensible, the argument value must be the
        // same as the result of [[GetPrototypeOf]] applied to target object.
        try {
          Object.setPrototypeOf(
            new Proxy(Object.preventExtensions({}), {
              setPrototypeOf: function () {
                passed = true;
                return true;
              }
            }),{});
          return false;
        } catch(e) {}
        return passed;
      
};
./build/359/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/359/in.js:5: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Object.setPrototypeOf({},{});
        ^

./build/359/in.js:9: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.setPrototypeOf(
          ^

./build/359/in.js:10: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
            new Proxy(Object.preventExtensions({}), {
                ^

0 error(s), 4 warning(s)
--------------------------------------------------------------------------------
// Proxy: "isExtensible" handler
module.exports = function() {
var proxied = {};
        var passed = false;
        Object.isExtensible(
          new Proxy(proxied, {
            isExtensible: function (t) {
              passed = t === proxied; return true;
            }
          })
        );
        return passed;
      
};
./build/360/in.js:5: WARNING - Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
        Object.isExtensible(
        ^

./build/360/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy(proxied, {
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "isExtensible" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // [[IsExtensible]] applied to the proxy object must return the same value
        // as [[IsExtensible]] applied to the proxy object's target object with the same argument.
        try {
          Object.isExtensible(new Proxy({}, {
            isExtensible: function (t) {
              passed = true;
              return false;
            }
          }));
          return false;
        } catch(e) {}
        try {
          Object.isExtensible(new Proxy(Object.preventExtensions({}), {
            isExtensible: function (t) {
              return true;
            }
          }));
          return false;
        } catch(e) {}
        return true;
      
};
./build/361/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/361/in.js:8: WARNING - Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
          Object.isExtensible(new Proxy({}, {
          ^

./build/361/in.js:8: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.isExtensible(new Proxy({}, {
                                  ^

./build/361/in.js:17: WARNING - Suspicious code. The result of the extern function call 'Object.isExtensible' is not being used.
          Object.isExtensible(new Proxy(Object.preventExtensions({}), {
          ^

./build/361/in.js:17: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.isExtensible(new Proxy(Object.preventExtensions({}), {
                                  ^

0 error(s), 5 warning(s)
--------------------------------------------------------------------------------
// Proxy: "preventExtensions" handler
module.exports = function() {
var proxied = {};
        var passed = false;
        Object.preventExtensions(
          new Proxy(proxied, {
            preventExtensions: function (t) {
              passed = t === proxied;
              return Object.preventExtensions(proxied);
            }
          })
        );
        return passed;
      
};
./build/362/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy(proxied, {
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "preventExtensions" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // [[PreventExtensions]] applied to the proxy object only returns true
        // if [[IsExtensible]] applied to the proxy object's target object is false.
        try {
          Object.preventExtensions(new Proxy({}, {
            preventExtensions: function () {
              passed = true;
              return true;
            }
          }));
          return false;
        } catch(e) {}
        return passed;
      
};
./build/363/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/363/in.js:8: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.preventExtensions(new Proxy({}, {
                                       ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "ownKeys" handler
module.exports = function() {
var proxied = {};
        var passed = false;
        Object.keys(
          new Proxy(proxied, {
            ownKeys: function (t) {
              passed = t === proxied; return [];
            }
          })
        );
        return passed;
      
};
./build/364/in.js:5: WARNING - Suspicious code. The result of the extern function call 'Object.keys' is not being used.
        Object.keys(
        ^

./build/364/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy(proxied, {
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "ownKeys" handler invariant
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // The Type of each result List element is either String or Symbol.
        try {
          Object.keys(new Proxy({}, {
            ownKeys: function () {
              passed = true;
              return [2];
            }}));
          return false;
        } catch(e) {}
        // The result List must contain the keys of all non-configurable own properties of the target object.
        var proxied = {};
        Object.defineProperty(proxied, "foo", { value: 2, writable: true, enumerable: true });
        try {
          Object.keys(new Proxy(proxied, {
            ownKeys: function () {
              return [];
            }}));
          return false;
        } catch(e) {}
        // If the target object is not extensible, then the result List must contain all the keys
        // of the own properties of the target object and no other values.
        try {
          Object.keys(new Proxy(Object.preventExtensions({b:1}), {
            ownKeys: function () {
              return ['a'];
            }}));
          return false;
        } catch(e) {}
        return passed;
      
};
./build/365/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/365/in.js:7: WARNING - Suspicious code. The result of the extern function call 'Object.keys' is not being used.
          Object.keys(new Proxy({}, {
          ^

./build/365/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.keys(new Proxy({}, {
                          ^

./build/365/in.js:18: WARNING - Suspicious code. The result of the extern function call 'Object.keys' is not being used.
          Object.keys(new Proxy(proxied, {
          ^

./build/365/in.js:18: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.keys(new Proxy(proxied, {
                          ^

./build/365/in.js:27: WARNING - Suspicious code. The result of the extern function call 'Object.keys' is not being used.
          Object.keys(new Proxy(Object.preventExtensions({b:1}), {
          ^

./build/365/in.js:27: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Object.keys(new Proxy(Object.preventExtensions({b:1}), {
                          ^

0 error(s), 7 warning(s)
--------------------------------------------------------------------------------
// Proxy: "apply" handler
module.exports = function() {
var proxied = function(){};
        var passed = false;
        var host = {
          method: new Proxy(proxied, {
            apply: function (t, thisArg, args) {
              passed = t === proxied && thisArg === host && args + "" === "foo,bar";
            }
          })
        };
        host.method("foo", "bar");
        return passed;
      
};
./build/366/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          method: new Proxy(proxied, {
                      ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "apply" handler invariant
module.exports = function() {
var passed = false;
        new Proxy(function(){}, {
            apply: function () { passed = true; }
        })();
        // A Proxy exotic object only has a [[Call]] internal method if the
        // initial value of its [[ProxyTarget]] internal slot is an object
        // that has a [[Call]] internal method.
        try {
          new Proxy({}, {
            apply: function () {}
          })();
          return false;
        } catch(e) {}
        return passed;
      
};
./build/367/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy(function(){}, {
            ^

./build/367/in.js:11: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new Proxy({}, {
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: "construct" handler
module.exports = function() {
var proxied = function(){};
        var passed = false;
        new new Proxy(proxied, {
          construct: function (t, args) {
            passed = t === proxied && args + "" === "foo,bar";
            return {};
          }
        })("foo","bar");
        return passed;
      
};
./build/368/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new new Proxy(proxied, {
                ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: "construct" handler invariants
module.exports = function() {
var passed = false;
        new Proxy({},{});
        // A Proxy exotic object only has a [[Construct]] internal method if the
        // initial value of its [[ProxyTarget]] internal slot is an object
        // that has a [[Construct]] internal method.
        try {
          new new Proxy({}, {
            construct: function (t, args) {
              return {};
            }
          })();
          return false;
        } catch(e) {}
        // The result of [[Construct]] must be an Object.
        try {
          new new Proxy(function(){}, {
            construct: function (t, args) {
              passed = true;
              return 5;
            }
          })();
          return false;
        } catch(e) {}
        return passed;
      
};
./build/369/in.js:4: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        new Proxy({},{});
            ^

./build/369/in.js:9: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new new Proxy({}, {
                  ^

./build/369/in.js:18: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          new new Proxy(function(){}, {
                  ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// Proxy: Proxy.revocable
module.exports = function() {
var obj = Proxy.revocable({}, { get: function() { return 5; } });
        var passed = (obj.proxy.foo === 5);
        obj.revoke();
        try {
          obj.proxy.foo;
        } catch(e) {
          passed &= e instanceof TypeError;
        }
        return passed;
      
};
./build/370/in.js:3: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
var obj = Proxy.revocable({}, { get: function() { return 5; } });
          ^

./build/370/in.js:7: WARNING - Suspicious code. The result of the 'getprop' operator is not being used.
          obj.proxy.foo;
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy: Array.isArray support
module.exports = function() {
return Array.isArray(new Proxy([], {}));
      
};
./build/371/in.js:3: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Array.isArray(new Proxy([], {}));
                         ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy: JSON.stringify support
module.exports = function() {
return JSON.stringify(new Proxy(['foo'], {})) === '["foo"]';
      
};
./build/372/in.js:3: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return JSON.stringify(new Proxy(['foo'], {})) === '["foo"]';
                          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.get
module.exports = function() {
return Reflect.get({ qux: 987 }, "qux") === 987;
      
};
./build/373/in.js:3: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Reflect.get({ qux: 987 }, "qux") === 987;
       ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.set
module.exports = function() {
var obj = {};
        Reflect.set(obj, "quux", 654);
        return obj.quux === 654;
      
};
./build/374/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Reflect.set(obj, "quux", 654);
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.has
module.exports = function() {
return Reflect.has({ qux: 987 }, "qux");
      
};
./build/375/in.js:3: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Reflect.has({ qux: 987 }, "qux");
       ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.deleteProperty
module.exports = function() {
var obj = { bar: 456 };
        Reflect.deleteProperty(obj, "bar");
        return !("bar" in obj);
      
};
./build/376/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Reflect.deleteProperty(obj, "bar");
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.getOwnPropertyDescriptor
module.exports = function() {
var obj = { baz: 789 };
        var desc = Reflect.getOwnPropertyDescriptor(obj, "baz");
        return desc.value === 789 &&
          desc.configurable && desc.writable && desc.enumerable;
      
};
./build/377/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var desc = Reflect.getOwnPropertyDescriptor(obj, "baz");
                   ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.defineProperty
module.exports = function() {
var obj = {};
        Reflect.defineProperty(obj, "foo", { value: 123 });
        return obj.foo === 123 &&
          Reflect.defineProperty(Object.freeze({}), "foo", { value: 123 }) === false;
      
};
./build/378/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Reflect.defineProperty(obj, "foo", { value: 123 });
        ^

./build/378/in.js:6: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          Reflect.defineProperty(Object.freeze({}), "foo", { value: 123 }) === false;
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.getPrototypeOf
module.exports = function() {
return Reflect.getPrototypeOf([]) === Array.prototype;
      
};
./build/379/in.js:3: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Reflect.getPrototypeOf([]) === Array.prototype;
       ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.setPrototypeOf
module.exports = function() {
var obj = {};
        Reflect.setPrototypeOf(obj, Array.prototype);
        return obj instanceof Array;
      
};
./build/380/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Reflect.setPrototypeOf(obj, Array.prototype);
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.isExtensible
module.exports = function() {
return Reflect.isExtensible({}) &&
          !Reflect.isExtensible(Object.preventExtensions({}));
      
};
./build/381/in.js:3: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Reflect.isExtensible({}) &&
       ^

./build/381/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
          !Reflect.isExtensible(Object.preventExtensions({}));
           ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.preventExtensions
module.exports = function() {
var obj = {};
        Reflect.preventExtensions(obj);
        return !Object.isExtensible(obj);
      
};
./build/382/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        Reflect.preventExtensions(obj);
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.ownKeys, string keys
module.exports = function() {
var obj = Object.create({ C: true });
        obj.A = true;
        Object.defineProperty(obj, 'B', { value: true, enumerable: false });

        return Reflect.ownKeys(obj).sort() + '' === "A,B";
      
};
./build/383/in.js:7: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        return Reflect.ownKeys(obj).sort() + '' === "A,B";
               ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.ownKeys, symbol keys
module.exports = function() {
var s1 = Symbol(), s2 = Symbol(), s3 = Symbol();
        var proto = {};
        proto[s1] = true;
        var obj = Object.create(proto);
        obj[s2] = true;
        Object.defineProperty(obj, s3, { value: true, enumerable: false });

        var keys = Reflect.ownKeys(obj);
        return keys.indexOf(s2) >-1 && keys.indexOf(s3) >-1 && keys.length === 2;
      
};
./build/384/in.js:10: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var keys = Reflect.ownKeys(obj);
                   ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.apply
module.exports = function() {
return Reflect.apply(Array.prototype.push, [1,2], [3,4,5]) === 5;
      
};
./build/385/in.js:3: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Reflect.apply(Array.prototype.push, [1,2], [3,4,5]) === 5;
       ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct
module.exports = function() {
return Reflect.construct(function(a, b, c) {
          this.qux = a + b + c;
        }, ["foo", "bar", "baz"]).qux === "foobarbaz";
      
};
./build/386/in.js:3: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Reflect.construct(function(a, b, c) {
       ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct sets new.target meta-property
module.exports = function() {
return Reflect.construct(function(a, b, c) {
          if (new.target === Object) {
            this.qux = a + b + c;
          }
        }, ["foo", "bar", "baz"], Object).qux === "foobarbaz";
      
};
./build/387/in.js:4: ERROR - ES6 transpilation of 'new.target' is not yet implemented.
          if (new.target === Object) {
              ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct creates instances from third argument
module.exports = function() {
function F(){}
        var obj = Reflect.construct(function(){ this.y = 1; }, [], F);
        return obj.y === 1 && obj instanceof F;
      
};
./build/388/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var obj = Reflect.construct(function(){ this.y = 1; }, [], F);
                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct, Array subclassing
module.exports = function() {
function F(){}
        var obj = Reflect.construct(Array, [], F);
        obj[2] = 'foo';
        return obj.length === 3 && obj instanceof F;
      
};
./build/389/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var obj = Reflect.construct(Array, [], F);
                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct, RegExp subclassing
module.exports = function() {
function F(){}
        var obj = Reflect.construct(RegExp, ["baz","g"], F);
        return RegExp.prototype.exec.call(obj, "foobarbaz")[0] === "baz"
          && obj.lastIndex === 9 && obj instanceof F;
      
};
./build/390/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var obj = Reflect.construct(RegExp, ["baz","g"], F);
                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct, Function subclassing
module.exports = function() {
function F(){}
        var obj = Reflect.construct(Function, ["return 2"], F);
        return obj() === 2 && obj instanceof F;
      
};
./build/391/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var obj = Reflect.construct(Function, ["return 2"], F);
                  ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Reflect: Reflect.construct, Promise subclassing
module.exports = function() {
function F(){}
        var p1 = Reflect.construct(Promise,[function(resolve, reject) { resolve("foo"); }], F);
        var p2 = Reflect.construct(Promise,[function(resolve, reject) { reject("quux"); }], F);
        var score = +(p1 instanceof F && p2 instanceof F);

        function thenFn(result)  { score += (result === "foo");  check(); }
        function catchFn(result) { score += (result === "quux"); check(); }
        function shouldNotRun(result)  { score = -Infinity;   }

        p1.then = p2.then = Promise.prototype.then;
        p1.catch = p2.catch = Promise.prototype.catch;

        p1.then(thenFn, shouldNotRun);
        p2.then(shouldNotRun, catchFn);
        p1.catch(shouldNotRun);
        p2.catch(catchFn);

        function check() {
          if (score === 4) asyncTestPassed();
        }
      
};
./build/392/in.js:4: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p1 = Reflect.construct(Promise,[function(resolve, reject) { resolve("foo"); }], F);
                 ^

./build/392/in.js:5: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p2 = Reflect.construct(Promise,[function(resolve, reject) { reject("quux"); }], F);
                 ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Symbol: cannot coerce to string or number
module.exports = function() {
var symbol = Symbol();

        try {
          symbol + "";
          return false;
        }
        catch(e) {}

        try {
          symbol + 0;
          return false;
        } catch(e) {}

        return true;
      
};
./build/406/in.js:6: WARNING - Suspicious code. The result of the 'add' operator is not being used.
          symbol + "";
          ^

./build/406/in.js:12: WARNING - Suspicious code. The result of the 'add' operator is not being used.
          symbol + 0;
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// well-known symbols: Symbol.hasInstance
module.exports = function() {
var passed = false;
        var obj = { foo: true };
        var C = function(){};
        Object.defineProperty(C, Symbol.hasInstance, {
          value: function(inst) { passed = inst.foo; return false; }
        });
        obj instanceof C;
        return passed;
      
};
./build/412/in.js:9: WARNING - Suspicious code. The result of the 'instanceof' operator is not being used.
        obj instanceof C;
        ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// well-known symbols: Symbol.toPrimitive
module.exports = function() {
var a = {}, b = {}, c = {};
        var passed = 0;
        a[Symbol.toPrimitive] = function(hint) { passed += hint === "number";  return 0; };
        b[Symbol.toPrimitive] = function(hint) { passed += hint === "string";  return 0; };
        c[Symbol.toPrimitive] = function(hint) { passed += hint === "default"; return 0; };

        a >= 0;
        b in {};
        c == 0;
        return passed === 3;
      
};
./build/432/in.js:9: WARNING - Suspicious code. The result of the 'ge' operator is not being used.
        a >= 0;
        ^

./build/432/in.js:10: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        b in {};
        ^

./build/432/in.js:11: WARNING - Suspicious code. The result of the 'eq' operator is not being used.
        c == 0;
        ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// Object static methods: Object.getOwnPropertySymbols
module.exports = function() {
var o = {};
        var sym = Symbol(), sym2 = Symbol(), sym3 = Symbol();
        o[sym]  = true;
        o[sym2] = true;
        o[sym3] = true;
        var result = Object.getOwnPropertySymbols(o);
        return result[0] === sym
          && result[1] === sym2
          && result[2] === sym3;
      
};
./build/440/in.js:8: WARNING - Built-in 'Object.getOwnPropertySymbols' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var result = Object.getOwnPropertySymbols(o);
                     ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Object static methods: Object.setPrototypeOf
module.exports = function() {
return Object.setPrototypeOf({}, Array.prototype) instanceof Array;
      
};
./build/441/in.js:3: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return Object.setPrototypeOf({}, Array.prototype) instanceof Array;
       ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// function "name" property: class expressions
module.exports = function() {
return class foo {}.name === "foo" &&
          typeof class bar { static name() {} }.name === "function";
      
};
./build/453/in.js:3: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
return class foo {}.name === "foo" &&
       ^

./build/453/in.js:4: ERROR - This code cannot be converted from ES6. Can only convert classes that are declarations or the right hand side of a simple assignment.
          typeof class bar { static name() {} }.name === "function";
                 ^

2 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// function "name" property: object methods (class)
module.exports = function() {
var o = { foo: class {}, bar: class baz {}};
        o.qux = class {};
        return o.foo.name === "foo" &&
               o.bar.name === "baz" &&
               o.qux.name === "";
      
};
java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ASSIGN): ./build/455/in.js:4:8
        o.qux = class {};
  Parent(EXPR_RESULT): ./build/455/in.js:4:8
        o.qux = class {};

  Node(CLASS): ./build/455/in.js:3:15
var o = { foo: class {}, bar: class baz {}};
  Parent(STRING_KEY foo): ./build/455/in.js:3:10
var o = { foo: class {}, bar: class baz {}};

	at com.google.javascript.jscomp.Es6ToEs3Converter$CheckClassAssignments.visit(Es6ToEs3Converter.java:920)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:623)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6ToEs3Converter.checkClassReassignment(Es6ToEs3Converter.java:299)
	at com.google.javascript.jscomp.Es6ToEs3Converter.visitClass(Es6ToEs3Converter.java:532)
	at com.google.javascript.jscomp.Es6ToEs3Converter.visit(Es6ToEs3Converter.java:159)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:623)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBlockScope(NodeTraversal.java:694)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:611)
	at com.google.javascript.jscomp.NodeTraversal.traverseFunction(NodeTraversal.java:654)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:607)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverseBranch(NodeTraversal.java:617)
	at com.google.javascript.jscomp.NodeTraversal.traverse(NodeTraversal.java:297)
	at com.google.javascript.jscomp.NodeTraversal.traverseEs6(NodeTraversal.java:564)
	at com.google.javascript.jscomp.Es6ToEs3Converter.process(Es6ToEs3Converter.java:99)
	at com.google.javascript.jscomp.PhaseOptimizer$NamedPass.process(PhaseOptimizer.java:285)
	at com.google.javascript.jscomp.PhaseOptimizer.process(PhaseOptimizer.java:217)
	at com.google.javascript.jscomp.Compiler.check(Compiler.java:805)
	at com.google.javascript.jscomp.Compiler.compileInternal(Compiler.java:710)
	at com.google.javascript.jscomp.Compiler.access$000(Compiler.java:83)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:659)
	at com.google.javascript.jscomp.Compiler$2.call(Compiler.java:656)
	at com.google.javascript.jscomp.CompilerExecutor$2.call(CompilerExecutor.java:93)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.RuntimeException: INTERNAL COMPILER ERROR.
Please report this problem.

null
  Node(ASSIGN): ./build/455/in.js:4:8
        o.qux = class {};
  Parent(EXPR_RESULT): ./build/455/in.js:4:8
        o.qux = class {};

	... 40 more
Caused by: java.lang.NullPointerException
	... 40 more
--------------------------------------------------------------------------------
// String static methods: String.raw
module.exports = function() {
return typeof String.raw === 'function';
      
};
./build/459/in.js:3: WARNING - Built-in 'String.raw' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
return typeof String.raw === 'function';
              ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// String.prototype methods: String.prototype.startsWith throws on RegExp
module.exports = function() {
try {
          "a".startsWith(/./);
        } catch(e) {
          return typeof String.prototype.startsWith === 'function';
      
};
./build/465/in.js:8: ERROR - Parse error. '}' expected
};
  ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// String.prototype methods: String.prototype.endsWith throws on RegExp
module.exports = function() {
try {
          "a".endsWith(/./);
        } catch(e) {
          return typeof String.prototype.endsWith === 'function';
      
};
./build/467/in.js:8: ERROR - Parse error. '}' expected
};
  ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// miscellaneous subclassables: Map is subclassable
module.exports = function() {
var key = {};
        class M extends Map {}
        var map = new M();

        map.set(key, 123);

        return map instanceof M && map.has(key) && map.get(key) === 123;
      
};
 [synthetic:1] :631: ERROR - @define variable  assignment must be global
/** @define {boolean} */ $jscomp.Map.ASSUME_NO_NATIVE = false;
                                                        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// miscellaneous subclassables: Set is subclassable
module.exports = function() {
var obj = {};
        class S extends Set {}
        var set = new S();

        set.add(123);
        set.add(123);

        return set instanceof S && set.has(123);
      
};
 [synthetic:1] :1048: ERROR - @define variable  assignment must be global
/** @define {boolean} */ $jscomp.Set.ASSUME_NO_NATIVE = false;
                                                        ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// prototype of bound functions: basic functions
module.exports = function() {
function correctProtoBound(proto) {
            var f = function(){};
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(f, proto);
            }
            else {
              f.__proto__ = proto;
            }
            var boundF = Function.prototype.bind.call(f, null);
            return Object.getPrototypeOf(boundF) === proto;
          }
          return correctProtoBound(Function.prototype)
            && correctProtoBound({})
            && correctProtoBound(null);
      
};
./build/554/in.js:5: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
            if (Object.setPrototypeOf) {
                ^

./build/554/in.js:6: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
              Object.setPrototypeOf(f, proto);
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// prototype of bound functions: generator functions
module.exports = function() {
function correctProtoBound(proto) {
            var f = function*(){};
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(f, proto);
            }
            else {
              f.__proto__ = proto;
            }
            var boundF = Function.prototype.bind.call(f, null);
            return Object.getPrototypeOf(boundF) === proto;
          }
          return correctProtoBound(Function.prototype)
            && correctProtoBound({})
            && correctProtoBound(null);
      
};
./build/555/in.js:5: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
            if (Object.setPrototypeOf) {
                ^

./build/555/in.js:6: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
              Object.setPrototypeOf(f, proto);
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// prototype of bound functions: arrow functions
module.exports = function() {
function correctProtoBound(proto) {
            var f = ()=>5;
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(f, proto);
            }
            else {
              f.__proto__ = proto;
            }
            var boundF = Function.prototype.bind.call(f, null);
            return Object.getPrototypeOf(boundF) === proto;
          }
          return correctProtoBound(Function.prototype)
            && correctProtoBound({})
            && correctProtoBound(null);
      
};
./build/556/in.js:5: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
            if (Object.setPrototypeOf) {
                ^

./build/556/in.js:6: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
              Object.setPrototypeOf(f, proto);
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// prototype of bound functions: classes
module.exports = function() {
function correctProtoBound(proto) {
            class C {}
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(C, proto);
            }
            else {
              C.__proto__ = proto;
            }
            var boundF = Function.prototype.bind.call(C, null);
            return Object.getPrototypeOf(boundF) === proto;
          }
          return correctProtoBound(Function.prototype)
            && correctProtoBound({})
            && correctProtoBound(null);
      
};
./build/557/in.js:5: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
            if (Object.setPrototypeOf) {
                ^

./build/557/in.js:6: WARNING - Built-in 'Object.setPrototypeOf' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
              Object.setPrototypeOf(C, proto);
              ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// prototype of bound functions: subclasses
module.exports = function() {
function correctProtoBound(superclass) {
            class C extends superclass {
              constructor() {
                return Object.create(null);
              }
            }
            var boundF = Function.prototype.bind.call(C, null);
            return Object.getPrototypeOf(boundF) === Object.getPrototypeOf(C);
          }
          return correctProtoBound(function(){})
            && correctProtoBound(Array)
            && correctProtoBound(null);
      
};
./build/558/in.js:5: ERROR - constructor is missing a call to super()
              constructor() {
              ^

1 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: ToPrimitive
module.exports = function() {
// ToPrimitive -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({toString:Function()}, { get: function(o, k) { get.push(k); return o[k]; }});
        p + 3;
        return get[0] === Symbol.toPrimitive && get.slice(1) + '' === "valueOf,toString";
      
};
./build/559/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({toString:Function()}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

./build/559/in.js:6: WARNING - Suspicious code. The result of the 'add' operator is not being used.
        p + 3;
        ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: CreateListFromArrayLike
module.exports = function() {
// CreateListFromArrayLike -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({length:2, 0:0, 1:0}, { get: function(o, k) { get.push(k); return o[k]; }});
        Function.prototype.apply({}, p);
        return get + '' === "length,0,1";
      
};
./build/560/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({length:2, 0:0, 1:0}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: instanceof operator
module.exports = function() {
// InstanceofOperator -> GetMethod -> GetV -> [[Get]]
        // InstanceofOperator -> OrdinaryHasInstance -> Get -> [[Get]]
        var get = [];
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
        ({}) instanceof p;
        return get[0] === Symbol.hasInstance && get.slice(1) + '' === "prototype";
      
};
./build/561/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

./build/561/in.js:7: WARNING - Suspicious code. The result of the 'instanceof' operator is not being used.
        ({}) instanceof p;
        ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: HasBinding
module.exports = function() {
// HasBinding -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({foo:1}, { get: function(o, k) { get.push(k); return o[k]; }});
        p[Symbol.unscopables] = p;
        with(p) {
          typeof foo;
        }
        return get[0] === Symbol.unscopables && get.slice(1) + '' === "foo";
      
};
./build/562/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:1}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

./build/562/in.js:8: WARNING - Suspicious code. The result of the 'typeof' operator is not being used.
          typeof foo;
          ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: CreateDynamicFunction
module.exports = function() {
// CreateDynamicFunction -> GetPrototypeFromConstructor -> Get -> [[Get]]
        var get = [];
        var p = new Proxy(Function, { get: function(o, k) { get.push(k); return o[k]; }});
        new p;
        return get + '' === "prototype";
      
};
./build/563/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(Function, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: ClassDefinitionEvaluation
module.exports = function() {
// ClassDefinitionEvaluation -> Get -> [[Get]]
        var get = [];
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
        class C extends p {}
        return get + '' === "prototype";
      
};
./build/564/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: IteratorComplete, IteratorValue
module.exports = function() {
// IteratorComplete -> Get -> [[Get]]
        // IteratorValue -> Get -> [[Get]]
        var get = [];
        var iterable = {};
        iterable[Symbol.iterator] = function() {
          return {
            next: function() {
              return new Proxy({ value: 2, done: false }, { get: function(o, k) { get.push(k); return o[k]; }});
            }
          };
        }
        var i = 0;
        for(var e of iterable) {
          if (++i >= 2) break;
        }
        return get + '' === "done,value,done,value";
      
};
./build/565/in.js:10: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
              return new Proxy({ value: 2, done: false }, { get: function(o, k) { get.push(k); return o[k]; }});
                         ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: ToPropertyDescriptor
module.exports = function() {
// ToPropertyDescriptor -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({
            enumerable: true, configurable: true, value: true,
            writable: true, get: Function(), set: Function()
          }, { get: function(o, k) { get.push(k); return o[k]; }});
        try {
          // This will throw, since it will have true for both "get" and "value",
          // but not before performing a Get on every property.
          Object.defineProperty({}, "foo", p);
        } catch(e) {
          return get + '' === "enumerable,configurable,value,writable,get,set";
        }
      
};
./build/566/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Object.assign
module.exports = function() {
// Object.assign -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({foo:1, bar:2}, { get: function(o, k) { get.push(k); return o[k]; }});
        Object.assign({}, p);
        return get + '' === "foo,bar";
      
};
./build/567/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:1, bar:2}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Object.defineProperties
module.exports = function() {
// Object.defineProperties -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({foo:{}, bar:{}}, { get: function(o, k) { get.push(k); return o[k]; }});
        Object.defineProperties({}, p);
        return get + '' === "foo,bar";
      
};
./build/568/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:{}, bar:{}}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Function.prototype.bind
module.exports = function() {
// Function.prototype.bind -> Get -> [[Get]]
        var get = [];
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
        Function.prototype.bind.call(p);
        return get + '' === "length,name";
      
};
./build/569/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(Function(), { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Error.prototype.toString
module.exports = function() {
// Error.prototype.toString -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
        Error.prototype.toString.call(p);
        return get + '' === "name,message";
      
};
./build/570/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: String.raw
module.exports = function() {
// String.raw -> Get -> [[Get]]
        var get = [];
        var raw = new Proxy({length: 2, 0: '', 1: ''}, { get: function(o, k) { get.push(k); return o[k]; }});
        var p = new Proxy({raw: raw}, { get: function(o, k) { get.push(k); return o[k]; }});
        String.raw(p);
        return get + '' === "raw,length,0,1";
      
};
./build/571/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var raw = new Proxy({length: 2, 0: '', 1: ''}, { get: function(o, k) { get.push(k); return o[k]; }});
                      ^

./build/571/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({raw: raw}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

./build/571/in.js:7: WARNING - Built-in 'String.raw' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        String.raw(p);
        ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp constructor
module.exports = function() {
// RegExp -> Get -> [[Get]]
        var get = [];
        var re = { constructor: null };
        re[Symbol.match] = true;
        var p = new Proxy(re, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp(p);
        return get[0] === Symbol.match && get.slice(1) + '' === "constructor,source,flags";
      
};
./build/572/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(re, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

./build/572/in.js:8: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
        RegExp(p);
        ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype.flags
module.exports = function() {
// RegExp.prototype.flags -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
        Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get.call(p);
        return get + '' === "global,ignoreCase,multiline,unicode,sticky";
      
};
./build/573/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype.test
module.exports = function() {
// RegExp.prototype.test -> RegExpExec -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp.prototype.test.call(p);
        return get + '' === "exec";
      
};
./build/574/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype.toString
module.exports = function() {
// RegExp.prototype.toString -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp.prototype.toString.call(p);
        return get + '' === "source,flags";
      
};
./build/575/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype[Symbol.match]
module.exports = function() {
// RegExp.prototype[Symbol.match] -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp.prototype[Symbol.match].call(p);
        p.global = true;
        RegExp.prototype[Symbol.match].call(p);
        return get + '' === "global,exec,global,unicode,exec";
      
};
./build/576/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype[Symbol.replace]
module.exports = function() {
// RegExp.prototype[Symbol.replace] -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp.prototype[Symbol.replace].call(p);
        p.global = true;
        RegExp.prototype[Symbol.replace].call(p);
        return get + '' === "global,exec,global,unicode,exec";
      
};
./build/577/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype[Symbol.search]
module.exports = function() {
// RegExp.prototype[Symbol.search] -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp.prototype[Symbol.search].call(p);
        return get + '' === "lastIndex,exec";
      
};
./build/578/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({ exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: RegExp.prototype[Symbol.split]
module.exports = function() {
// RegExp.prototype[Symbol.split] -> Get -> [[Get]]
        var get = [];
        var constructor = Function();
        constructor[Symbol.species] = Object;
        var p = new Proxy({ constructor: constructor, flags: '', exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
        RegExp.prototype[Symbol.split].call(p, "");
        return get + '' === "constructor,flags,exec";
      
};
./build/579/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({ constructor: constructor, flags: '', exec: function() { return null; } }, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.from
module.exports = function() {
// Array.from -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({length: 2, 0: '', 1: ''}, { get: function(o, k) { get.push(k); return o[k]; }});
        Array.from(p);
        return get[0] === Symbol.iterator && get.slice(1) + '' === "length,0,1";
      
};
./build/580/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({length: 2, 0: '', 1: ''}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype.concat
module.exports = function() {
// Array.prototype.concat -> Get -> [[Get]]
        var get = [];
        var arr = [1];
        arr.constructor = undefined;
        var p = new Proxy(arr, { get: function(o, k) { get.push(k); return o[k]; }});
        Array.prototype.concat.call(p,p);
        return get[0] === "constructor"
          && get[1] === Symbol.isConcatSpreadable
          && get[2] === "length"
          && get[3] === "0"
          && get[4] === get[1] && get[5] === get[2] && get[6] === get[3]
          && get.length === 7;
      
};
./build/581/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(arr, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype iteration methods
module.exports = function() {
// Array.prototype methods -> Get -> [[Get]]
        var methods = ['copyWithin', 'every', 'fill', 'filter', 'find', 'findIndex', 'forEach',
          'indexOf', 'join', 'lastIndexOf', 'map', 'reduce', 'reduceRight', 'some'];
        var get;
        var p = new Proxy({length: 2, 0: '', 1: ''}, { get: function(o, k) { get.push(k); return o[k]; }});
        for(var i = 0; i < methods.length; i+=1) {
          get = [];
          Array.prototype[methods[i]].call(p, Function());
          if (get + '' !== (
            methods[i] === 'fill' ? "length" :
            methods[i] === 'every' ? "length,0" :
            methods[i] === 'lastIndexOf' || methods[i] === 'reduceRight' ? "length,1,0" :
            "length,0,1"
          )) {
            return false;
          }
        }
        return true;
      
};
./build/582/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({length: 2, 0: '', 1: ''}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype.pop
module.exports = function() {
// Array.prototype.pop -> Get -> [[Get]]
        var get = [];
        var p = new Proxy([0,1,2,3], { get: function(o, k) { get.push(k); return o[k]; }});
        Array.prototype.pop.call(p);
        return get + '' === "length,3";
      
};
./build/583/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,1,2,3], { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype.reverse
module.exports = function() {
// Array.prototype.reverse -> Get -> [[Get]]
        var get = [];
        var p = new Proxy([0,,2,,4,,], { get: function(o, k) { get.push(k); return o[k]; }});
        Array.prototype.reverse.call(p);
        return get + '' === "length,0,4,2";
      
};
./build/584/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,,2,,4,,], { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype.shift
module.exports = function() {
// Array.prototype.shift -> Get -> [[Get]]
        var get = [];
        var p = new Proxy([0,1,2,3], { get: function(o, k) { get.push(k); return o[k]; }});
        Array.prototype.shift.call(p);
        return get + '' === "length,0,1,2,3";
      
};
./build/585/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,1,2,3], { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype.splice
module.exports = function() {
// Array.prototype.splice -> Get -> [[Get]]
        var get = [];
        var p = new Proxy([0,1,2,3], { get: function(o, k) { get.push(k); return o[k]; }});
        Array.prototype.splice.call(p,1,1);
        Array.prototype.splice.call(p,1,0,1);
        return get + '' === "length,constructor,1,2,3,length,constructor,2,1";
      
};
./build/586/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,1,2,3], { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Array.prototype.toString
module.exports = function() {
// Array.prototype.toString -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({ join:Function() }, { get: function(o, k) { get.push(k); return o[k]; }});
        Array.prototype.toString.call(p);
        return get + '' === "join";
      
};
./build/587/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({ join:Function() }, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: JSON.stringify
module.exports = function() {
// JSON.stringify -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
        JSON.stringify(p);
        return get + '' === "toJSON";
      
};
./build/588/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Promise resolve functions
module.exports = function() {
// Promise resolve functions -> Get -> [[Get]]
        var get = [];
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
        new Promise(function(resolve){ resolve(p); });
        return get + '' === "then";
      
};
./build/589/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: String.prototype.match
module.exports = function() {
// String.prototype.match -> Get -> [[Get]]
        var get = [];
        var proxied = {};
        proxied[Symbol.toPrimitive] = Function();
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
        "".match(p);
        return get[0] === Symbol.match && get[1] === Symbol.toPrimitive && get.length === 2;
      
};
./build/590/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: String.prototype.replace
module.exports = function() {
// String.prototype.replace functions -> Get -> [[Get]]
        var get = [];
        var proxied = {};
        proxied[Symbol.toPrimitive] = Function();
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
        "".replace(p);
        return get[0] === Symbol.replace && get[1] === Symbol.toPrimitive && get.length === 2;
      
};
./build/591/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: String.prototype.search
module.exports = function() {
// String.prototype.search functions -> Get -> [[Get]]
        var get = [];
        var proxied = {};
        proxied[Symbol.toPrimitive] = Function();
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
        "".search(p);
        return get[0] === Symbol.search && get[1] === Symbol.toPrimitive && get.length === 2;
      
};
./build/592/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: String.prototype.split
module.exports = function() {
// String.prototype.split functions -> Get -> [[Get]]
        var get = [];
        var proxied = {};
        proxied[Symbol.toPrimitive] = Function();
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
        "".split(p);
        return get[0] === Symbol.split && get[1] === Symbol.toPrimitive && get.length === 2;
      
};
./build/593/in.js:7: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(proxied, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'get' calls: Date.prototype.toJSON
module.exports = function() {
// Date.prototype.toJSON -> ToPrimitive -> Get -> [[Get]]
        // Date.prototype.toJSON -> Invoke -> GetMethod -> GetV -> [[Get]]
        var get = [];
        var p = new Proxy({toString:Function(),toISOString:Function()}, { get: function(o, k) { get.push(k); return o[k]; }});
        Date.prototype.toJSON.call(p);
        return get[0] === Symbol.toPrimitive && get.slice(1) + '' === "valueOf,toString,toISOString";
      
};
./build/594/in.js:6: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({toString:Function(),toISOString:Function()}, { get: function(o, k) { get.push(k); return o[k]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Object.assign
module.exports = function() {
// Object.assign -> Set -> [[Set]]
        var set = [];
        var p = new Proxy({}, { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        Object.assign(p, { foo: 1, bar: 2 });
        return set + '' === "foo,bar";
      
};
./build/595/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.from
module.exports = function() {
// Array.from -> Set -> [[Set]]
        var set = [];
        var p = new Proxy({}, { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        Array.from.call(function(){ return p; }, {length:2, 0:1, 1:2});
        return set + '' === "length";
      
};
./build/596/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.of
module.exports = function() {
// Array.from -> Set -> [[Set]]
        var set = [];
        var p = new Proxy({}, { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        Array.of.call(function(){ return p; }, 1, 2, 3);
        return set + '' === "length";
      
};
./build/597/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.copyWithin
module.exports = function() {
// Array.prototype.copyWithin -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([1,2,3,4,5,6], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.copyWithin(0, 3);
        return set + '' === "0,1,2";
      
};
./build/598/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([1,2,3,4,5,6], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.fill
module.exports = function() {
// Array.prototype.fill -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([1,2,3,4,5,6], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.fill(0, 3);
        return set + '' === "3,4,5";
      
};
./build/599/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([1,2,3,4,5,6], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.pop
module.exports = function() {
// Array.prototype.pop -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.pop();
        return set + '' === "length";
      
};
./build/600/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.push
module.exports = function() {
// Array.prototype.push -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.push(0,0,0);
        return set + '' === "0,1,2,length";
      
};
./build/601/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.reverse
module.exports = function() {
// Array.prototype.reverse -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([0,0,0,,], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.reverse();
        return set + '' === "3,1,2";
      
};
./build/602/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,0,,], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.shift
module.exports = function() {
// Array.prototype.shift -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([0,0,,0], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.shift();
        return set + '' === "0,2,length";
      
};
./build/603/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,,0], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.splice
module.exports = function() {
// Array.prototype.splice -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([1,2,3], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.splice(1,0,0);
        return set + '' === "3,2,1,length";
      
};
./build/604/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([1,2,3], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'set' calls: Array.prototype.unshift
module.exports = function() {
// Array.prototype.unshift -> Set -> [[Set]]
        var set = [];
        var p = new Proxy([0,0,,0], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
        p.unshift(0,1);
        return set + '' === "5,3,2,0,1,length";
      
};
./build/605/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,,0], { set: function(o, k, v) { set.push(k); o[k] = v; return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'defineProperty' calls: [[Set]]
module.exports = function() {
// [[Set]] -> [[DefineOwnProperty]]
        var def = [];
        var p = new Proxy({foo:1, bar:2}, { defineProperty: function(o, v, desc) { def.push(v); Object.defineProperty(o, v, desc); return true; }});
        p.foo = 2; p.bar = 4;
        return def + '' === "foo,bar";
      
};
./build/606/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:1, bar:2}, { defineProperty: function(o, v, desc) { def.push(v); Object.defineProperty(o, v, desc); return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'defineProperty' calls: SetIntegrityLevel
module.exports = function() {
// SetIntegrityLevel -> DefinePropertyOrThrow -> [[DefineOwnProperty]]
        var def = [];
        var p = new Proxy({foo:1, bar:2}, { defineProperty: function(o, v, desc) { def.push(v); Object.defineProperty(o, v, desc); return true; }});
        Object.freeze(p);
        return def + '' === "foo,bar";
      
};
./build/607/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:1, bar:2}, { defineProperty: function(o, v, desc) { def.push(v); Object.defineProperty(o, v, desc); return true; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'deleteProperty' calls: Array.prototype.copyWithin
module.exports = function() {
// Array.prototype.copyWithin -> DeletePropertyOrThrow -> [[Delete]]
        var del = [];
        var p = new Proxy([0,0,0,,,,], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
        p.copyWithin(0,3);
        return del + '' === "0,1,2";
      
};
./build/608/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,0,,,,], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'deleteProperty' calls: Array.prototype.pop
module.exports = function() {
// Array.prototype.pop -> DeletePropertyOrThrow -> [[Delete]]
        var del = [];
        var p = new Proxy([0,0,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
        p.pop();
        return del + '' === "2";
      
};
./build/609/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'deleteProperty' calls: Array.prototype.reverse
module.exports = function() {
// Array.prototype.reverse -> DeletePropertyOrThrow -> [[Delete]]
        var del = [];
        var p = new Proxy([0,,2,,4,,], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
        p.reverse();
        return del + '' === "0,4,2";
      
};
./build/610/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,,2,,4,,], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'deleteProperty' calls: Array.prototype.shift
module.exports = function() {
// Array.prototype.shift -> DeletePropertyOrThrow -> [[Delete]]
        var del = [];
        var p = new Proxy([0,,0,,0,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
        p.shift();
        return del + '' === "0,2,5";
      
};
./build/611/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,,0,,0,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'deleteProperty' calls: Array.prototype.splice
module.exports = function() {
// Array.prototype.splice -> DeletePropertyOrThrow -> [[Delete]]
        var del = [];
        var p = new Proxy([0,0,0,0,,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
        p.splice(2,2,0);
        return del + '' === "3,5";
      
};
./build/612/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,0,0,,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'deleteProperty' calls: Array.prototype.unshift
module.exports = function() {
// Array.prototype.unshift -> DeletePropertyOrThrow -> [[Delete]]
        var del = [];
        var p = new Proxy([0,0,,0,,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
        p.unshift(0);
        return del + '' === "5,3";
      
};
./build/613/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy([0,0,,0,,0], { deleteProperty: function(o, v) { del.push(v); return delete o[v]; }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'getOwnPropertyDescriptor' calls: [[Set]]
module.exports = function() {
// [[Set]] -> [[GetOwnProperty]]
        var gopd = [];
        var p = new Proxy({},
          { getOwnPropertyDescriptor: function(o, v) { gopd.push(v); return Object.getOwnPropertyDescriptor(o, v); }});
        p.foo = 1; p.bar = 1;
        return gopd + '' === "foo,bar";
      
};
./build/614/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({},
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'getOwnPropertyDescriptor' calls: Object.assign
module.exports = function() {
// Object.assign -> [[GetOwnProperty]]
        var gopd = [];
        var p = new Proxy({foo:1, bar:2},
          { getOwnPropertyDescriptor: function(o, v) { gopd.push(v); return Object.getOwnPropertyDescriptor(o, v); }});
        Object.assign({}, p);
        return gopd + '' === "foo,bar";
      
};
./build/615/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:1, bar:2},
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'getOwnPropertyDescriptor' calls: Object.prototype.hasOwnProperty
module.exports = function() {
// Object.prototype.hasOwnProperty -> HasOwnProperty -> [[GetOwnProperty]]
        var gopd = [];
        var p = new Proxy({foo:1, bar:2},
          { getOwnPropertyDescriptor: function(o, v) { gopd.push(v); return Object.getOwnPropertyDescriptor(o, v); }});
        p.hasOwnProperty('garply');
        return gopd + '' === "garply";
      
};
./build/616/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({foo:1, bar:2},
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'getOwnPropertyDescriptor' calls: Function.prototype.bind
module.exports = function() {
// Function.prototype.bind -> HasOwnProperty -> [[GetOwnProperty]]
        var gopd = [];
        var p = new Proxy(Function(),
          { getOwnPropertyDescriptor: function(o, v) { gopd.push(v); return Object.getOwnPropertyDescriptor(o, v); }});
        p.bind();
        return gopd + '' === "length";
      
};
./build/617/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(Function(),
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'ownKeys' calls: SetIntegrityLevel
module.exports = function() {
// SetIntegrityLevel -> [[OwnPropertyKeys]]
        var ownKeysCalled = 0;
        var p = new Proxy({}, { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
        Object.freeze(p);
        return ownKeysCalled === 1;
      
};
./build/618/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'ownKeys' calls: TestIntegrityLevel
module.exports = function() {
// TestIntegrityLevel -> [[OwnPropertyKeys]]
        var ownKeysCalled = 0;
        var p = new Proxy(Object.preventExtensions({}), { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
        Object.isFrozen(p);
        return ownKeysCalled === 1;
      
};
./build/619/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy(Object.preventExtensions({}), { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
                    ^

./build/619/in.js:6: WARNING - Suspicious code. The result of the extern function call 'Object.isFrozen' is not being used.
        Object.isFrozen(p);
        ^

0 error(s), 2 warning(s)
--------------------------------------------------------------------------------
// Proxy, internal 'ownKeys' calls: SerializeJSONObject
module.exports = function() {
// SerializeJSONObject -> EnumerableOwnNames -> [[OwnPropertyKeys]]
        var ownKeysCalled = 0;
        var p = new Proxy({}, { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
        JSON.stringify({a:p,b:p});
        return ownKeysCalled === 2;
      
};
./build/620/in.js:5: WARNING - Built-in 'Proxy' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var p = new Proxy({}, { ownKeys: function(o) { ownKeysCalled++; return Object.keys(o); }});
                    ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// own property order: Reflect.ownKeys, string key order
module.exports = function() {
var obj = {
          2:    true,
          0:    true,
          1:    true,
          ' ':  true,
          9:    true,
          D:    true,
          B:    true,
          '-1': true
        };
        obj.A = true;
        obj[3] = true;
        "EFGHIJKLMNOPQRSTUVWXYZ".split('').forEach(function(key){
          obj[key] = true;
        });
        Object.defineProperty(obj, 'C', { value: true, enumerable: true });
        Object.defineProperty(obj, '4', { value: true, enumerable: true });
        delete obj[2];
        obj[2] = true;

        return Reflect.ownKeys(obj).join('') === "012349 DB-1AEFGHIJKLMNOPQRSTUVWXYZC";
      
};
./build/636/in.js:23: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        return Reflect.ownKeys(obj).join('') === "012349 DB-1AEFGHIJKLMNOPQRSTUVWXYZC";
               ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// own property order: Reflect.ownKeys, symbol key order
module.exports = function() {
var sym1 = Symbol(), sym2 = Symbol(), sym3 = Symbol();
        var obj = {
          1:    true,
          A:    true,
        };
        obj.B = true;
        obj[sym1] = true;
        obj[2] = true;
        obj[sym2] = true;
        Object.defineProperty(obj, 'C', { value: true, enumerable: true });
        Object.defineProperty(obj, sym3,{ value: true, enumerable: true });
        Object.defineProperty(obj, 'D', { value: true, enumerable: true });

        var result = Reflect.ownKeys(obj);
        var l = result.length;
        return result[l-3] === sym1 && result[l-2] === sym2 && result[l-1] === sym3;
      
};
./build/637/in.js:16: WARNING - Built-in 'Reflect' not supported in output version ECMASCRIPT5: set --language_out to at least ECMASCRIPT6
        var result = Reflect.ownKeys(obj);
                     ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// miscellaneous: built-in prototypes are not instances
module.exports = function() {
try {
          RegExp.prototype.exec(); return false;
        } catch(e) {}
        try {
          Date.prototype.valueOf(); return false;
        } catch(e) {}

        if (![Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError].every(function (E) {
            return Object.prototype.toString.call(E.prototype) === '[object Object]';
        })) {
          return false;
        }

        return true;
      
};
./build/646/in.js:7: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
          Date.prototype.valueOf(); return false;
          ^

0 error(s), 1 warning(s)
--------------------------------------------------------------------------------
// non-strict function semantics: function statements in if-statement clauses
module.exports = function() {
// Note: only available outside of strict mode.
        if (!this) return false;

        if(true) function foo() { return 2; }
        if(false) {} else function bar() { return 3; }
        if(true) function baz() { return 4; } else {}
        if(false) function qux() { return 5; } else function qux() { return 6; }
        return foo() === 2 && bar() === 3 && baz() === 4 && qux() === 6;
      
};
./build/650/in.js:6: ERROR - Block-scoped declaration not directly within block: foo
        if(true) function foo() { return 2; }
                          ^

./build/650/in.js:7: ERROR - Block-scoped declaration not directly within block: bar
        if(false) {} else function bar() { return 3; }
                                   ^

./build/650/in.js:8: ERROR - Block-scoped declaration not directly within block: baz
        if(true) function baz() { return 4; } else {}
                          ^

./build/650/in.js:9: ERROR - Block-scoped declaration not directly within block: qux
        if(false) function qux() { return 5; } else function qux() { return 6; }
                           ^

./build/650/in.js:9: ERROR - Block-scoped declaration not directly within block: qux
        if(false) function qux() { return 5; } else function qux() { return 6; }
                                                             ^

5 error(s), 0 warning(s)
--------------------------------------------------------------------------------
// HTML-style comments
module.exports = function() {
--> A comment
    <!-- Another comment
    var a = 3; <!-- Another comment
    return a === 3;
  
};
./build/674/in.js:3: WARNING - Parse error. In some cases, '<!--' and '-->' are treated as a '//' for legacy reasons. Removing this from your code is safe for all browsers currently in use.
--> A comment
^

./build/674/in.js:4: WARNING - Parse error. In some cases, '<!--' and '-->' are treated as a '//' for legacy reasons. Removing this from your code is safe for all browsers currently in use.
    <!-- Another comment
    ^

./build/674/in.js:5: WARNING - Parse error. In some cases, '<!--' and '-->' are treated as a '//' for legacy reasons. Removing this from your code is safe for all browsers currently in use.
    var a = 3; <!-- Another comment
               ^

0 error(s), 3 warning(s)
--------------------------------------------------------------------------------
