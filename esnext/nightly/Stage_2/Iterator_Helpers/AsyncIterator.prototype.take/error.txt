// Stage 2 / Iterator Helpers / AsyncIterator.prototype.take
module.exports = (asyncTestPassed) => {
  async function toArray(iterator) {
    const result = [];
    for await (const it of iterator) result.push(it);
    return result;
  }
  toArray(async function*() { yield * [1, 2, 3] }().take(2)).then(it => {
    if (it.join() === '1,2') asyncTestPassed();
  });

};
----------------------------------------------------------
/tmp/faast/43918a2e-a8d0-4f13-9ad3-aa454f9416ef/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.32' not found (required by /tmp/faast/43918a2e-a8d0-4f13-9ad3-aa454f9416ef/node_modules/google-closure-compiler-linux/compiler)
/tmp/faast/43918a2e-a8d0-4f13-9ad3-aa454f9416ef/node_modules/google-closure-compiler-linux/compiler: /lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.34' not found (required by /tmp/faast/43918a2e-a8d0-4f13-9ad3-aa454f9416ef/node_modules/google-closure-compiler-linux/compiler)
