[
  {
    "path": "candidate__stage_3_/globalThis/globalThis_global_property_is_global_object",
    "category": "candidate (stage 3)",
    "test": "globalThis",
    "subtest": "\"globalThis\" global property is global object"
  },
  {
    "path": "candidate__stage_3_/globalThis/globalThis_global_property_has_correct_property_descriptor",
    "category": "candidate (stage 3)",
    "test": "globalThis",
    "subtest": "\"globalThis\" global property has correct property descriptor"
  },
  {
    "path": "candidate__stage_3_/WeakReferences/WeakRef_minimal_support",
    "category": "candidate (stage 3)",
    "test": "WeakReferences",
    "subtest": "WeakRef minimal support"
  },
  {
    "path": "candidate__stage_3_/WeakReferences/Finalizers_minimal_support",
    "category": "candidate (stage 3)",
    "test": "WeakReferences",
    "subtest": "Finalizers minimal support"
  },
  {
    "path": "candidate__stage_3_/instance_class_fields/public_instance_class_fields",
    "category": "candidate (stage 3)",
    "test": "instance class fields",
    "subtest": "public instance class fields"
  },
  {
    "path": "candidate__stage_3_/instance_class_fields/private_instance_class_fields_basic_support",
    "category": "candidate (stage 3)",
    "test": "instance class fields",
    "subtest": "private instance class fields basic support"
  },
  {
    "path": "candidate__stage_3_/instance_class_fields/private_instance_class_fields_initializers",
    "category": "candidate (stage 3)",
    "test": "instance class fields",
    "subtest": "private instance class fields initializers"
  },
  {
    "path": "candidate__stage_3_/instance_class_fields/computed_instance_class_fields",
    "category": "candidate (stage 3)",
    "test": "instance class fields",
    "subtest": "computed instance class fields"
  },
  {
    "path": "candidate__stage_3_/static_class_fields/public_static_class_fields",
    "category": "candidate (stage 3)",
    "test": "static class fields",
    "subtest": "public static class fields"
  },
  {
    "path": "candidate__stage_3_/static_class_fields/private_static_class_fields",
    "category": "candidate (stage 3)",
    "test": "static class fields",
    "subtest": "private static class fields"
  },
  {
    "path": "candidate__stage_3_/static_class_fields/computed_static_class_fields",
    "category": "candidate (stage 3)",
    "test": "static class fields",
    "subtest": "computed static class fields"
  },
  {
    "path": "candidate__stage_3_/optional_chaining_operator___._/optional_property_access",
    "category": "candidate (stage 3)",
    "test": "optional chaining operator (?.)",
    "subtest": "optional property access"
  },
  {
    "path": "candidate__stage_3_/optional_chaining_operator___._/optional_bracket_access",
    "category": "candidate (stage 3)",
    "test": "optional chaining operator (?.)",
    "subtest": "optional bracket access"
  },
  {
    "path": "candidate__stage_3_/optional_chaining_operator___._/optional_method_call",
    "category": "candidate (stage 3)",
    "test": "optional chaining operator (?.)",
    "subtest": "optional method call"
  },
  {
    "path": "candidate__stage_3_/nullish_coalescing_operator_____",
    "category": "candidate (stage 3)",
    "test": "nullish coalescing operator (??)"
  },
  {
    "path": "candidate__stage_3_/numeric_separators",
    "category": "candidate (stage 3)",
    "test": "numeric separators"
  },
  {
    "path": "candidate__stage_3_/BigInt/basic_functionality",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "basic functionality"
  },
  {
    "path": "candidate__stage_3_/BigInt/constructor",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "constructor"
  },
  {
    "path": "candidate__stage_3_/BigInt/BigInt.asIntN",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "BigInt.asIntN"
  },
  {
    "path": "candidate__stage_3_/BigInt/BigInt.asUintN",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "BigInt.asUintN"
  },
  {
    "path": "candidate__stage_3_/BigInt/BigInt64Array",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "BigInt64Array"
  },
  {
    "path": "candidate__stage_3_/BigInt/BigUint64Array",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "BigUint64Array"
  },
  {
    "path": "candidate__stage_3_/BigInt/DataView.prototype.getBigInt64",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "DataView.prototype.getBigInt64"
  },
  {
    "path": "candidate__stage_3_/BigInt/DataView.prototype.getBigUint64",
    "category": "candidate (stage 3)",
    "test": "BigInt",
    "subtest": "DataView.prototype.getBigUint64"
  },
  {
    "path": "candidate__stage_3_/Legacy_RegExp_features_in_JavaScript/RegExp_lastMatch",
    "category": "candidate (stage 3)",
    "test": "Legacy RegExp features in JavaScript",
    "subtest": "RegExp \"lastMatch\""
  },
  {
    "path": "candidate__stage_3_/Legacy_RegExp_features_in_JavaScript/RegExp.$1-$9",
    "category": "candidate (stage 3)",
    "test": "Legacy RegExp features in JavaScript",
    "subtest": "RegExp.$1-$9"
  },
  {
    "path": "draft__stage_2_/Generator_function.sent_Meta_Property",
    "category": "draft (stage 2)",
    "test": "Generator function.sent Meta Property"
  },
  {
    "path": "draft__stage_2_/Class_and_Property_Decorators/class_decorators",
    "category": "draft (stage 2)",
    "test": "Class and Property Decorators",
    "subtest": "class decorators"
  },
  {
    "path": "draft__stage_2_/Realms",
    "category": "draft (stage 2)",
    "test": "Realms"
  },
  {
    "path": "draft__stage_2_/throw_expressions/logical",
    "category": "draft (stage 2)",
    "test": "throw expressions",
    "subtest": "logical"
  },
  {
    "path": "draft__stage_2_/throw_expressions/parameter_initializers",
    "category": "draft (stage 2)",
    "test": "throw expressions",
    "subtest": "parameter initializers"
  },
  {
    "path": "draft__stage_2_/throw_expressions/arrow_function_bodies",
    "category": "draft (stage 2)",
    "test": "throw expressions",
    "subtest": "arrow function bodies"
  },
  {
    "path": "draft__stage_2_/throw_expressions/conditionals",
    "category": "draft (stage 2)",
    "test": "throw expressions",
    "subtest": "conditionals"
  },
  {
    "path": "draft__stage_2_/String.prototype.replaceAll",
    "category": "draft (stage 2)",
    "test": "String.prototype.replaceAll"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.intersection",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.intersection"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.union",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.union"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.difference",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.difference"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.symmetricDifference",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.symmetricDifference"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.isDisjointFrom",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.isDisjointFrom"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.isSubsetOf",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.isSubsetOf"
  },
  {
    "path": "draft__stage_2_/Set_methods/Set.prototype.isSupersetOf",
    "category": "draft (stage 2)",
    "test": "Set methods",
    "subtest": "Set.prototype.isSupersetOf"
  },
  {
    "path": "draft__stage_2_/ArrayBuffer.prototype.transfer/ArrayBuffer.prototype.transfer__",
    "category": "draft (stage 2)",
    "test": "ArrayBuffer.prototype.transfer",
    "subtest": "ArrayBuffer.prototype.transfer()"
  },
  {
    "path": "draft__stage_2_/ArrayBuffer.prototype.transfer/ArrayBuffer.prototype.realloc__",
    "category": "draft (stage 2)",
    "test": "ArrayBuffer.prototype.transfer",
    "subtest": "ArrayBuffer.prototype.realloc()"
  },
  {
    "path": "draft__stage_2_/Promise.any",
    "category": "draft (stage 2)",
    "test": "Promise.any"
  },
  {
    "path": "proposal__stage_1_/do_expressions",
    "category": "proposal (stage 1)",
    "test": "do expressions"
  },
  {
    "path": "proposal__stage_1_/Observable/basic_support",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "basic support"
  },
  {
    "path": "proposal__stage_1_/Observable/Symbol.observable_well_known_symbol",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "Symbol.observable well known symbol"
  },
  {
    "path": "proposal__stage_1_/Observable/Observable.prototype.subscribe",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "Observable.prototype.subscribe"
  },
  {
    "path": "proposal__stage_1_/Observable/Observable_constructor_behavior",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "Observable constructor behavior"
  },
  {
    "path": "proposal__stage_1_/Observable/Observable.prototype_Symbol.observable_",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "Observable.prototype[Symbol.observable]"
  },
  {
    "path": "proposal__stage_1_/Observable/Observable.of",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "Observable.of"
  },
  {
    "path": "proposal__stage_1_/Observable/Observable.from",
    "category": "proposal (stage 1)",
    "test": "Observable",
    "subtest": "Observable.from"
  },
  {
    "path": "proposal__stage_1_/Frozen_Realms_API",
    "category": "proposal (stage 1)",
    "test": "Frozen Realms API"
  },
  {
    "path": "proposal__stage_1_/Math.signbit",
    "category": "proposal (stage 1)",
    "test": "Math.signbit"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.clamp",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.clamp"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.DEG_PER_RAD",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.DEG_PER_RAD"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.degrees",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.degrees"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.fscale",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.fscale"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.RAD_PER_DEG",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.RAD_PER_DEG"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.radians",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.radians"
  },
  {
    "path": "proposal__stage_1_/Math_extensions_proposal/Math.scale",
    "category": "proposal (stage 1)",
    "test": "Math extensions proposal",
    "subtest": "Math.scale"
  },
  {
    "path": "proposal__stage_1_/Promise.try/basic_support",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "basic support"
  },
  {
    "path": "proposal__stage_1_/Promise.try/returns_instance_of_Promise",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "returns instance of Promise"
  },
  {
    "path": "proposal__stage_1_/Promise.try/call_function_synchronously",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "call function synchronously"
  },
  {
    "path": "proposal__stage_1_/Promise.try/function_returns_value",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "function returns value"
  },
  {
    "path": "proposal__stage_1_/Promise.try/function_throws_exception",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "function throws exception"
  },
  {
    "path": "proposal__stage_1_/Promise.try/function_returns_fulfilled_Promise",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "function returns fulfilled Promise"
  },
  {
    "path": "proposal__stage_1_/Promise.try/function_returns_rejected_Promise",
    "category": "proposal (stage 1)",
    "test": "Promise.try",
    "subtest": "function returns rejected Promise"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/Map.of",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "Map.of"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/Map.from",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "Map.from"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/Set.of",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "Set.of"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/Set.from",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "Set.from"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/WeakMap.of",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "WeakMap.of"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/WeakMap.from",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "WeakMap.from"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/WeakSet.of",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "WeakSet.of"
  },
  {
    "path": "proposal__stage_1_/_.of__and__.from__on_collection_constructors/WeakSet.from",
    "category": "proposal (stage 1)",
    "test": "`.of` and `.from` on collection constructors",
    "subtest": "WeakSet.from"
  },
  {
    "path": "proposal__stage_1_/the_pipeline_operator",
    "category": "proposal (stage 1)",
    "test": "the pipeline operator"
  },
  {
    "path": "proposal__stage_1_/extensible_numeric_literals",
    "category": "proposal (stage 1)",
    "test": "extensible numeric literals"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/partial_application_from_left",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "partial application from left"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/partial_application_from_right",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "partial application from right"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/partial_application_for_any_arg",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "partial application for any arg"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/partial_application_from_left_with_rest",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "partial application from left with rest"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/partial_application_from_right_with_rest",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "partial application from right with rest"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/partial_application_for_any_arg_with_rest",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "partial application for any arg with rest"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/mixed_partial_application",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "mixed partial application"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/runtime_evaluation",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "runtime evaluation"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/runtime_evaluation_of_property_access",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "runtime evaluation of property access"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/lexical__this_",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "lexical `this`"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/constructor_partial_application",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "constructor partial application"
  },
  {
    "path": "proposal__stage_1_/partial_application_syntax/constructor_partial_application_with_rest",
    "category": "proposal (stage 1)",
    "test": "partial application syntax",
    "subtest": "constructor partial application with rest"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Object.freeze_syntax",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Object.freeze syntax"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Object.freeze_syntax_with_array_literal",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Object.freeze syntax with array literal"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Object.seal_syntax",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Object.seal syntax"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Object.seal_syntax_with_array_literal",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Object.seal syntax with array literal"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Sealing,_function_destructuring",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Sealing, function destructuring"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Freezing,_function_destructuring",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Freezing, function destructuring"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Sealing,_function_arguments",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Sealing, function arguments"
  },
  {
    "path": "proposal__stage_1_/Object.freeze_and_Object.seal_syntax/Freezing,_function_arguments",
    "category": "proposal (stage 1)",
    "test": "Object.freeze and Object.seal syntax",
    "subtest": "Freezing, function arguments"
  },
  {
    "path": "proposal__stage_1_/String.prototype.codePoints",
    "category": "proposal (stage 1)",
    "test": "String.prototype.codePoints"
  },
  {
    "path": "proposal__stage_1_/Getting_last_item_from_array/Array.prototype.lastItem",
    "category": "proposal (stage 1)",
    "test": "Getting last item from array",
    "subtest": "Array.prototype.lastItem"
  },
  {
    "path": "proposal__stage_1_/Getting_last_item_from_array/Array.prototype.lastIndex",
    "category": "proposal (stage 1)",
    "test": "Getting last item from array",
    "subtest": "Array.prototype.lastIndex"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.groupBy",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.groupBy"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.keyBy",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.keyBy"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.deleteAll",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.deleteAll"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.every",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.every"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.filter",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.filter"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.find",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.find"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.findKey",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.findKey"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.includes",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.includes"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.keyOf",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.keyOf"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.mapKeys",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.mapKeys"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.mapValues",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.mapValues"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.merge",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.merge"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.reduce",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.reduce"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Map.prototype.some",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Map.prototype.some"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.addAll",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.addAll"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.deleteAll",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.deleteAll"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.every",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.every"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.filter",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.filter"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.find",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.find"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.join",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.join"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.map",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.map"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.reduce",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.reduce"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/Set.prototype.some",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "Set.prototype.some"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/WeakMap.prototype.deleteAll",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "WeakMap.prototype.deleteAll"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/WeakSet.prototype.addAll",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "WeakSet.prototype.addAll"
  },
  {
    "path": "proposal__stage_1_/Collections_methods/WeakSet.prototype.deleteAll",
    "category": "proposal (stage 1)",
    "test": "Collections methods",
    "subtest": "WeakSet.prototype.deleteAll"
  },
  {
    "path": "proposal__stage_1_/Math.seededPRNG",
    "category": "proposal (stage 1)",
    "test": "Math.seededPRNG"
  },
  {
    "path": "proposal__stage_1_/__BigInt,_Number__.fromString/Number.fromString",
    "category": "proposal (stage 1)",
    "test": "{ BigInt, Number }.fromString",
    "subtest": "Number.fromString"
  },
  {
    "path": "proposal__stage_1_/__BigInt,_Number__.fromString/BigInt.fromString",
    "category": "proposal (stage 1)",
    "test": "{ BigInt, Number }.fromString",
    "subtest": "BigInt.fromString"
  },
  {
    "path": "strawman__stage_0_/bind______operator/binary_form",
    "category": "strawman (stage 0)",
    "test": "bind (::) operator",
    "subtest": "binary form"
  },
  {
    "path": "strawman__stage_0_/bind______operator/unary_form",
    "category": "strawman (stage 0)",
    "test": "bind (::) operator",
    "subtest": "unary form"
  },
  {
    "path": "strawman__stage_0_/String.prototype.at",
    "category": "strawman (stage 0)",
    "test": "String.prototype.at"
  },
  {
    "path": "strawman__stage_0_/additional_meta_properties/function.callee",
    "category": "strawman (stage 0)",
    "test": "additional meta properties",
    "subtest": "function.callee"
  },
  {
    "path": "strawman__stage_0_/additional_meta_properties/function.count",
    "category": "strawman (stage 0)",
    "test": "additional meta properties",
    "subtest": "function.count"
  },
  {
    "path": "strawman__stage_0_/additional_meta_properties/function.arguments",
    "category": "strawman (stage 0)",
    "test": "additional meta properties",
    "subtest": "function.arguments"
  },
  {
    "path": "strawman__stage_0_/method_parameter_decorators",
    "category": "strawman (stage 0)",
    "test": "method parameter decorators"
  },
  {
    "path": "strawman__stage_0_/function_expression_decorators",
    "category": "strawman (stage 0)",
    "test": "function expression decorators"
  },
  {
    "path": "strawman__stage_0_/Reflect.isCallable___Reflect.isConstructor/Reflect.isCallable",
    "category": "strawman (stage 0)",
    "test": "Reflect.isCallable / Reflect.isConstructor",
    "subtest": "Reflect.isCallable"
  },
  {
    "path": "strawman__stage_0_/Reflect.isCallable___Reflect.isConstructor/Reflect.isConstructor",
    "category": "strawman (stage 0)",
    "test": "Reflect.isCallable / Reflect.isConstructor",
    "subtest": "Reflect.isConstructor"
  },
  {
    "path": "strawman__stage_0_/zones/Zone",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone"
  },
  {
    "path": "strawman__stage_0_/zones/Zone.current",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone.current"
  },
  {
    "path": "strawman__stage_0_/zones/Zone.prototype.name",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone.prototype.name"
  },
  {
    "path": "strawman__stage_0_/zones/Zone.prototype.parent",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone.prototype.parent"
  },
  {
    "path": "strawman__stage_0_/zones/Zone.prototype.fork",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone.prototype.fork"
  },
  {
    "path": "strawman__stage_0_/zones/Zone.prototype.run",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone.prototype.run"
  },
  {
    "path": "strawman__stage_0_/zones/Zone.prototype.wrap",
    "category": "strawman (stage 0)",
    "test": "zones",
    "subtest": "Zone.prototype.wrap"
  },
  {
    "path": "strawman__stage_0_/syntactic_tail_calls/direct_recursion",
    "category": "strawman (stage 0)",
    "test": "syntactic tail calls",
    "subtest": "direct recursion"
  },
  {
    "path": "strawman__stage_0_/syntactic_tail_calls/mutual_recursion",
    "category": "strawman (stage 0)",
    "test": "syntactic tail calls",
    "subtest": "mutual recursion"
  },
  {
    "path": "strawman__stage_0_/object_shorthand_improvements/object_initializers",
    "category": "strawman (stage 0)",
    "test": "object shorthand improvements",
    "subtest": "object initializers"
  },
  {
    "path": "strawman__stage_0_/object_shorthand_improvements/destructuring_assignments",
    "category": "strawman (stage 0)",
    "test": "object shorthand improvements",
    "subtest": "destructuring assignments"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.defineMetadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.defineMetadata"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.hasMetadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.hasMetadata"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.hasOwnMetadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.hasOwnMetadata"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.getMetadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.getMetadata"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.getOwnMetadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.getOwnMetadata"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.getMetadataKeys",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.getMetadataKeys"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.getOwnMetadataKeys",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.getOwnMetadataKeys"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.deleteMetadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.deleteMetadata"
  },
  {
    "path": "pre-strawman/Metadata_reflection_API/Reflect.metadata",
    "category": "pre-strawman",
    "test": "Metadata reflection API",
    "subtest": "Reflect.metadata"
  }
]